package com.mossshine.blocks.init;

import com.mossshine.blocks.BlocksMod;
import com.mossshine.blocks.blocks.BlockCamouflage;
import com.mossshine.blocks.blocks.FacingBlock;
import com.mossshine.blocks.blocks.FlowerDefaultEffectBlock;
import com.mossshine.blocks.entities.SwappableTextureTileEntity;
import net.minecraft.block.*;
import net.minecraft.block.material.Material;
import net.minecraft.block.material.MaterialColor;
import net.minecraft.block.material.PushReaction;
import net.minecraft.client.renderer.RenderType;
import net.minecraft.client.renderer.RenderTypeLookup;
import net.minecraft.item.BlockItem;
import net.minecraft.item.Item;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.tileentity.TileEntityType;
import net.minecraftforge.fml.RegistryObject;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import java.util.function.Supplier;

public class BlocksList
{
    public static void register() {}

    private static final Material MAT_0 = new Material(MaterialColor.CLAY, false, true, true, true, false, false, PushReaction.NORMAL);
    private static final Material MAT_1 = new Material(MaterialColor.CLAY, false, false, true, true, false, false, PushReaction.NORMAL);
    private static final Material MAT_5 = new Material(MaterialColor.WOOD, false, true, true, true, true, false, PushReaction.NORMAL);
    private static final Material MAT_7 = new Material(MaterialColor.RED_TERRACOTTA, false, true, true, true, true, false, PushReaction.NORMAL);
    private static final Material MAT_11 = new Material(MaterialColor.GRAY_TERRACOTTA, false, true, true, true, true, false, PushReaction.NORMAL);
    private static final Material MAT_12 = new Material(MaterialColor.GREEN, false, false, false, false, true, false, PushReaction.DESTROY);
    private static final Material MAT_14 = new Material(MaterialColor.FOLIAGE, false, false, false, false, true, false, PushReaction.DESTROY);
    private static final Material MAT_15 = new Material(MaterialColor.FOLIAGE, false, false, false, false, true, true, PushReaction.DESTROY);
    private static final Material MAT_16 = new Material(MaterialColor.ADOBE, false, true, true, true, true, false, PushReaction.NORMAL);
    private static final Material MAT_18 = new Material(MaterialColor.WHITE_TERRACOTTA, false, true, true, true, true, false, PushReaction.NORMAL);
    private static final Material MAT_19 = new Material(MaterialColor.WHITE_TERRACOTTA, false, true, true, true, false, false, PushReaction.NORMAL);
    private static final Material MAT_20 = new Material(MaterialColor.BROWN_TERRACOTTA, false, true, true, true, true, false, PushReaction.NORMAL);
    private static final Material MAT_21 = new Material(MaterialColor.ORANGE_TERRACOTTA, false, true, true, true, true, false, PushReaction.NORMAL);
    private static final Material MAT_23 = new Material(MaterialColor.AIR, false, false, false, false, false, false, PushReaction.DESTROY);
    private static final AbstractBlock.Properties PROP_0 = AbstractBlock.Properties.create(MAT_0).sound(SoundType.STONE).hardnessAndResistance(0.5F,0.5F);
    private static final AbstractBlock.Properties PROP_1 = AbstractBlock.Properties.create(MAT_1).sound(SoundType.STONE).hardnessAndResistance(0.5F,0.5F);
    private static final AbstractBlock.Properties PROP_6 = AbstractBlock.Properties.create(MAT_5).sound(SoundType.WOOD).hardnessAndResistance(0.5F,0.5F);
    private static final AbstractBlock.Properties PROP_8 = AbstractBlock.Properties.create(MAT_7).sound(SoundType.WOOD).hardnessAndResistance(0.5F,0.5F);
    private static final AbstractBlock.Properties PROP_12 = AbstractBlock.Properties.create(MAT_11).sound(SoundType.WOOD).hardnessAndResistance(0.5F,0.5F);
    private static final AbstractBlock.Properties PROP_13 = AbstractBlock.Properties.create(MAT_12).sound(SoundType.PLANT).hardnessAndResistance(0F,0F).doesNotBlockMovement();
    private static final AbstractBlock.Properties PROP_15 = AbstractBlock.Properties.create(MAT_14).sound(SoundType.PLANT).hardnessAndResistance(0F,0F).doesNotBlockMovement();
    private static final AbstractBlock.Properties PROP_16 = AbstractBlock.Properties.create(MAT_15).sound(SoundType.PLANT).hardnessAndResistance(0F,0F).doesNotBlockMovement();
    private static final AbstractBlock.Properties PROP_17 = AbstractBlock.Properties.create(MAT_16).sound(SoundType.ANVIL).hardnessAndResistance(0.5F,0.5F);
    private static final AbstractBlock.Properties PROP_19 = AbstractBlock.Properties.create(MAT_18).sound(SoundType.WOOD).hardnessAndResistance(0.5F,0.5F);
    private static final AbstractBlock.Properties PROP_20 = AbstractBlock.Properties.create(MAT_19).sound(SoundType.WOOD).hardnessAndResistance(0.5F,0.5F);
    private static final AbstractBlock.Properties PROP_21 = AbstractBlock.Properties.create(MAT_20).sound(SoundType.WOOD).hardnessAndResistance(0.5F,0.5F);
    private static final AbstractBlock.Properties PROP_22 = AbstractBlock.Properties.create(MAT_21).sound(SoundType.WOOD).hardnessAndResistance(0.5F,0.5F);
    private static final AbstractBlock.Properties PROP_24 = AbstractBlock.Properties.create(MAT_23).sound(SoundType.STONE).hardnessAndResistance(0F,0F).doesNotBlockMovement();
    public static final RegistryObject<Block> FLAT_MYSTIC_WOOD_PANELS = register("flat_mystic_wood_panels", () -> new Block(AbstractBlock.Properties.create(new Material(MaterialColor.BLUE_TERRACOTTA, false, true, true, true, true, false, PushReaction.NORMAL)).sound(SoundType.WOOD).hardnessAndResistance(0.5F,0.5F)));
    public static final RegistryObject<Block> MYSTIC_WOOD_PLANKS = register("mystic_wood_planks", () -> new Block(AbstractBlock.Properties.create(new Material(MaterialColor.BLUE_TERRACOTTA, false, true, true, true, true, false, PushReaction.NORMAL)).sound(SoundType.WOOD).hardnessAndResistance(0.5F,0.5F)));
    public static final RegistryObject<Block> MODERNSTYLE_WHITEWASHED_SIDING = register("modernstyle_whitewashed_siding", () -> new Block(PROP_19));
    public static final RegistryObject<Block> MODERNSTYLE_SHINGLES = register("modernstyle_shingles", () -> new Block(AbstractBlock.Properties.create(new Material(MaterialColor.BLACK_TERRACOTTA, false, true, true, true, true, false, PushReaction.NORMAL)).sound(SoundType.WOOD).hardnessAndResistance(0.5F,0.5F)));
    public static final RegistryObject<Block> SMOOTH_SOLID_DARK_STAINED = register("smooth_solid_dark_stained", () -> new Block(PROP_21));
    public static final RegistryObject<Block> LARGE_DARK_STAINED_PANELS = register("large_dark_stained_panels", () -> new Block(PROP_21));
    public static final RegistryObject<Block> NAILED_DARK_STAINED_SLATS = register("nailed_dark_stained_slats", () -> new Block(PROP_21));
    public static final RegistryObject<Block> LARGE_DARK_STAINED_SLATS = register("large_dark_stained_slats", () -> new Block(PROP_21));
    public static final RegistryObject<Block> FANCY_DARK_STAINED_PLANKS = register("fancy_dark_stained_planks", () -> new Block(PROP_21));
    public static final RegistryObject<Block> FANCY_DARK_STAINED_CRATES = register("fancy_dark_stained_crates", () -> new Block(PROP_21));
    public static final RegistryObject<Block> DARK_STAINED_CRATES = register("dark_stained_crates", () -> new Block(PROP_21));
    public static final RegistryObject<Block> DARK_STAINED_PLANKS = register("dark_stained_planks", () -> new Block(PROP_21));
    public static final RegistryObject<Block> CLASSICSTYLE_DARK_STAINED_SLATS = register("classicstyle_dark_stained_slats", () -> new Block(PROP_21));
    public static final RegistryObject<Block> SMALL_DARK_STAINED_SLATS = register("small_dark_stained_slats", () -> new Block(PROP_21));
    public static final RegistryObject<Block> SMOOTH_SOLID_ORANGE = register("smooth_solid_orange", () -> new Block(PROP_22));
    public static final RegistryObject<Block> LARGE_ORANGE_PANELS = register("large_orange_panels", () -> new Block(PROP_22));
    public static final RegistryObject<Block> NAILED_ORANGE_SLATS = register("nailed_orange_slats", () -> new Block(PROP_22));
    public static final RegistryObject<Block> LARGE_ORANGE_SLATS = register("large_orange_slats", () -> new Block(PROP_22));
    public static final RegistryObject<Block> FANCY_ORANGE_PLANKS = register("fancy_orange_planks", () -> new Block(PROP_22));
    public static final RegistryObject<Block> FANCY_ORANGE_CRATES = register("fancy_orange_crates", () -> new Block(PROP_22));
    public static final RegistryObject<Block> ORANGE_CRATES = register("orange_crates", () -> new Block(PROP_22));
    public static final RegistryObject<Block> ORANGE_PLANKS = register("orange_planks", () -> new Block(PROP_22));
    public static final RegistryObject<Block> CLASSICSTYLE_ORANGE_SLATS = register("classicstyle_orange_slats", () -> new Block(PROP_22));
    public static final RegistryObject<Block> SMALL_ORANGE_SLATS = register("small_orange_slats", () -> new Block(PROP_22));
    public static final RegistryObject<Block> SMOOTH_SOLID_HAZELNUT = register("smooth_solid_hazelnut", () -> new Block(PROP_12));
    public static final RegistryObject<Block> LARGE_HAZELNUT_PANELS = register("large_hazelnut_panels", () -> new Block(PROP_12));
    public static final RegistryObject<Block> NAILED_HAZELNUT_SLATS = register("nailed_hazelnut_slats", () -> new Block(PROP_12));
    public static final RegistryObject<Block> LARGE_HAZELNUT_SLATS = register("large_hazelnut_slats", () -> new Block(PROP_12));
    public static final RegistryObject<Block> FANCY_HAZELNUT_PLANKS = register("fancy_hazelnut_planks", () -> new Block(PROP_12));
    public static final RegistryObject<Block> FANCY_HAZELNUT_CRATES = register("fancy_hazelnut_crates", () -> new Block(PROP_19));
    public static final RegistryObject<Block> HAZELNUT_CRATES = register("hazelnut_crates", () -> new Block(PROP_19));
    public static final RegistryObject<Block> HAZELNUT_PLANKS = register("hazelnut_planks", () -> new Block(PROP_12));
    public static final RegistryObject<Block> CLASSICSTYLE_HAZELNUT_SLATS = register("classicstyle_hazelnut_slats", () -> new Block(PROP_12));
    public static final RegistryObject<Block> SMALL_HAZELNUT_SLATS = register("small_hazelnut_slats", () -> new Block(PROP_12));
    public static final RegistryObject<Block> SMOOTH_SOLID_WHITE = register("smooth_solid_white", () -> new Block(PROP_20));
    public static final RegistryObject<Block> LARGE_WHITE_PANELS = register("large_white_panels", () -> new Block(PROP_19));
    public static final RegistryObject<Block> NAILED_WHITE_SLATS = register("nailed_white_slats", () -> new Block(PROP_19));
    public static final RegistryObject<Block> LARGE_WHITE_SLATS = register("large_white_slats", () -> new Block(PROP_19));
    public static final RegistryObject<Block> FANCY_WHITE_PLANKS = register("fancy_white_planks", () -> new Block(PROP_19));
    public static final RegistryObject<Block> FANCY_WHITE_CRATES = register("fancy_white_crates", () -> new Block(PROP_19));
    public static final RegistryObject<Block> WHITE_CRATES = register("white_crates", () -> new Block(PROP_19));
    public static final RegistryObject<Block> WHITE_PLANKS = register("white_planks", () -> new Block(PROP_19));
    public static final RegistryObject<Block> CLASSICSTYLE_WHITE_SLATS = register("classicstyle_white_slats", () -> new Block(PROP_19));
    public static final RegistryObject<Block> SMALL_WHITE_SLATS = register("small_white_slats", () -> new Block(PROP_19));
    public static final RegistryObject<Block> SMOOTH_SOLID_PECAN = register("smooth_solid_pecan", () -> new Block(PROP_21));
    public static final RegistryObject<Block> LARGE_PECAN_PANELS = register("large_pecan_panels", () -> new Block(PROP_21));
    public static final RegistryObject<Block> NAILED_PECAN_SLATS = register("nailed_pecan_slats", () -> new Block(PROP_21));
    public static final RegistryObject<Block> LARGE_PECAN_SLATS = register("large_pecan_slats", () -> new Block(PROP_21));
    public static final RegistryObject<Block> FANCY_PECAN_PLANKS = register("fancy_pecan_planks", () -> new Block(PROP_21));
    public static final RegistryObject<Block> FANCY_PECAN_CRATES = register("fancy_pecan_crates", () -> new Block(PROP_21));
    public static final RegistryObject<Block> PECAN_CRATES = register("pecan_crates", () -> new Block(PROP_17));
    public static final RegistryObject<Block> PECAN_PLANKS = register("pecan_planks", () -> new Block(PROP_21));
    public static final RegistryObject<Block> CLASSICSTYLE_PECAN_SLATS = register("classicstyle_pecan_slats", () -> new Block(PROP_21));
    public static final RegistryObject<Block> SMALL_PECAN_SLATS = register("small_pecan_slats", () -> new Block(PROP_21));
    public static final RegistryObject<Block> SMOOTH_SOLID_CHESTNUT = register("smooth_solid_chestnut", () -> new Block(PROP_21));
    public static final RegistryObject<Block> LARGE_CHESTNUT_PANELS = register("large_chestnut_panels", () -> new Block(PROP_21));
    public static final RegistryObject<Block> NAILED_CHESTNUT_SLATS = register("nailed_chestnut_slats", () -> new Block(PROP_21));
    public static final RegistryObject<Block> LARGE_CHESTNUT_SLATS = register("large_chestnut_slats", () -> new Block(PROP_21));
    public static final RegistryObject<Block> FANCY_CHESTNUT_PLANKS = register("fancy_chestnut_planks", () -> new Block(PROP_21));
    public static final RegistryObject<Block> FANCY_CHESTNUT_CRATES = register("fancy_chestnut_crates", () -> new Block(PROP_21));
    public static final RegistryObject<Block> CHESTNUT_CRATES = register("chestnut_crates", () -> new Block(PROP_21));
    public static final RegistryObject<Block> CHESTNUT_PLANKS = register("chestnut_planks", () -> new Block(PROP_21));
    public static final RegistryObject<Block> CLASSICSTYLE_CHESTNUT_SLATS = register("classicstyle_chestnut_slats", () -> new Block(PROP_21));
    public static final RegistryObject<Block> SMALL_CHESTNUT_SLATS = register("small_chestnut_slats", () -> new Block(PROP_21));
    public static final RegistryObject<Block> SMOOTH_SOLID_AGED_WOOD = register("smooth_solid_aged_wood", () -> new Block(PROP_12));
    public static final RegistryObject<Block> LARGE_AGED_WOOD_PANELS = register("large_aged_wood_panels", () -> new Block(PROP_12));
    public static final RegistryObject<Block> NAILED_AGED_SLATS = register("nailed_aged_slats", () -> new Block(PROP_12));
    public static final RegistryObject<Block> LARGE_AGED_SLATS = register("large_aged_slats", () -> new Block(PROP_12));
    public static final RegistryObject<Block> FANCY_AGED_PLANKS = register("fancy_aged_planks", () -> new Block(PROP_12));
    public static final RegistryObject<Block> FANCY_AGED_CRATES = register("fancy_aged_crates", () -> new Block(PROP_12));
    public static final RegistryObject<Block> AGED_CRATES = register("aged_crates", () -> new Block(PROP_12));
    public static final RegistryObject<Block> AGED_PLANKS = register("aged_planks", () -> new Block(PROP_12));
    public static final RegistryObject<Block> CLASSICSTYLE_AGED_SLATS = register("classicstyle_aged_slats", () -> new Block(PROP_12));
    public static final RegistryObject<Block> SMALL_AGED_SLATS = register("small_aged_slats", () -> new Block(PROP_12));
    public static final RegistryObject<Block> SMOOTH_SOLID_RAW_WOOD = register("smooth_solid_raw_wood", () -> new Block(PROP_19));
    public static final RegistryObject<Block> LARGE_RAW_WOOD_PANELS = register("large_raw_wood_panels", () -> new Block(PROP_19));
    public static final RegistryObject<Block> NAILED_UNFINISHED_WOOD_SLATS = register("nailed_unfinished_wood_slats", () -> new Block(PROP_19));
    public static final RegistryObject<Block> LARGE_UNFINISHED_WOOD_SLATS = register("large_unfinished_wood_slats", () -> new Block(PROP_19));
    public static final RegistryObject<Block> FANCY_UNFINISHED_WOOD_PLANKS = register("fancy_unfinished_wood_planks", () -> new Block(PROP_19));
    public static final RegistryObject<Block> FANCY_UNFINISHED_WOOD_CRATES = register("fancy_unfinished_wood_crates", () -> new Block(PROP_19));
    public static final RegistryObject<Block> UNFINISHED_WOOD_CRATES = register("unfinished_wood_crates", () -> new Block(PROP_19));
    public static final RegistryObject<Block> UNFINISHED_WOOD_PLANKS = register("unfinished_wood_planks", () -> new Block(PROP_19));
    public static final RegistryObject<Block> CLASSICSTYLE_UNFINISHED_WOOD_SLATS = register("classicstyle_unfinished_wood_slats", () -> new Block(PROP_19));
    public static final RegistryObject<Block> SMALL_UNFINISHED_WOOD_SLATS = register("small_unfinished_wood_slats", () -> new Block(PROP_20));
    public static final RegistryObject<Block> SMOOTH_SOLID_LIGHT_WOOD = register("smooth_solid_light_wood", () -> new Block(PROP_19));
    public static final RegistryObject<Block> LARGE_LIGHT_WOOD_PANELS = register("large_light_wood_panels", () -> new Block(PROP_19));
    public static final RegistryObject<Block> NAILED_LIGHT_WOOD_SLATS = register("nailed_light_wood_slats", () -> new Block(PROP_20));
    public static final RegistryObject<Block> LARGE_LIGHT_WOOD_SLATS = register("large_light_wood_slats", () -> new Block(PROP_19));
    public static final RegistryObject<Block> FANCY_LIGHT_WOOD_PLANKS = register("fancy_light_wood_planks", () -> new Block(PROP_19));
    public static final RegistryObject<Block> FANCY_LIGHT_WOOD_CRATES = register("fancy_light_wood_crates", () -> new Block(PROP_19));
    public static final RegistryObject<Block> LIGHT_WOOD_CRATES = register("light_wood_crates", () -> new Block(PROP_19));
    public static final RegistryObject<Block> LIGHT_WOOD_PLANKS = register("light_wood_planks", () -> new Block(PROP_19));
    public static final RegistryObject<Block> CLASSICSTYLE_LIGHT_WOOD_SLATS = register("classicstyle_light_wood_slats", () -> new Block(PROP_17));
    public static final RegistryObject<Block> SMALL_LIGHT_WOOD_SLATS = register("small_light_wood_slats", () -> new Block(PROP_17));
    public static final RegistryObject<Block> SMOOTH_SOLID_DARK_WOOD = register("smooth_solid_dark_wood", () -> new Block(PROP_17));
    public static final RegistryObject<Block> LARGE_DARK_WOOD_PANELS = register("large_dark_wood_panels", () -> new Block(PROP_17));
    public static final RegistryObject<Block> NAILED_MAHOGANY_SLATS = register("nailed_mahogany_slats", () -> new Block(PROP_17));
    public static final RegistryObject<Block> LARGE_MAHOGANY_SLATS = register("large_mahogany_slats", () -> new Block(PROP_17));
    public static final RegistryObject<Block> FANCY_MAHOGANY_PLANKS = register("fancy_mahogany_planks", () -> new Block(PROP_17));
    public static final RegistryObject<Block> FANCY_MAHOGANY_CRATES = register("fancy_mahogany_crates", () -> new Block(PROP_17));
    public static final RegistryObject<Block> MAHOGANY_CRATES = register("mahogany_crates", () -> new Block(PROP_17));
    public static final RegistryObject<Block> MAHOGANY_PLANKS = register("mahogany_planks", () -> new Block(PROP_17));
    public static final RegistryObject<Block> CLASSICSTYLE_MAHOGANY_SLATS = register("classicstyle_mahogany_slats", () -> new Block(PROP_17));
    public static final RegistryObject<Block> SMALL_MAHOGANY_SLATS = register("small_mahogany_slats", () -> new Block(PROP_17));
    public static final RegistryObject<FacingBlock> MEAT_BLOCK = register("meat_block", () -> new FacingBlock(PROP_17));
    public static final RegistryObject<RotatedPillarBlock> BAMBOO_LEAFY_HAY_BALE = register("bamboo_leafy_hay_bale", () -> new RotatedPillarBlock(PROP_17));
    public static final RegistryObject<RotatedPillarBlock> LEAFY_HAY_BALE = register("leafy_hay_bale", () -> new RotatedPillarBlock(PROP_17));
    public static final RegistryObject<Block> RED_GRAPES_HAY_BALE = register("red_grapes_hay_bale", () -> new Block(PROP_17));
    public static final RegistryObject<Block> GREEN_GRAPES_HAY_BALE = register("green_grapes_hay_bale", () -> new Block(AbstractBlock.Properties.create(new Material(MaterialColor.FOLIAGE, false, true, true, true, true, false, PushReaction.NORMAL)).sound(SoundType.PLANT).hardnessAndResistance(0.5F,0.5F)));
    public static final RegistryObject<RotatedPillarBlock> CORN_HAY_BALE = register("corn_hay_bale", () -> new RotatedPillarBlock(PROP_17));
    public static final RegistryObject<RotatedPillarBlock> BORDERED_SIMPLE_STYLE_HAY_BALE = register("bordered_simple_style_hay_bale", () -> new RotatedPillarBlock(PROP_17));
    public static final RegistryObject<RotatedPillarBlock> SIMPLE_STYLE_HAY_BALE = register("simple_style_hay_bale", () -> new RotatedPillarBlock(PROP_17));
    public static final RegistryObject<RotatedPillarBlock> BORDERED_CLASSIC_HAY_BALE = register("bordered_classic_hay_bale", () -> new RotatedPillarBlock(PROP_17));
    public static final RegistryObject<FlowerDefaultEffectBlock> YELLOW_ACACIA_SAPLING = register("yellow_acacia_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_YELLOW_ACACIA_SAPLING = registerNoItem("potted_yellow_acacia_sapling", () -> new FlowerPotBlock(YELLOW_ACACIA_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> GREEN_ACACIA_SAPLING = register("green_acacia_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_GREEN_ACACIA_SAPLING = registerNoItem("potted_green_acacia_sapling", () -> new FlowerPotBlock(GREEN_ACACIA_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ROBUST_YELLOW_SAPLING = register("robust_yellow_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ROBUST_YELLOW_SAPLING = registerNoItem("potted_robust_yellow_sapling", () -> new FlowerPotBlock(ROBUST_YELLOW_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ROBUST_WHITE_PETAL_SAPLING = register("robust_white_petal_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ROBUST_WHITE_PETAL_SAPLING = registerNoItem("potted_robust_white_petal_sapling", () -> new FlowerPotBlock(ROBUST_WHITE_PETAL_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ROBUST_SILVERMARCHES_SAPLING = register("robust_silvermarches_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ROBUST_SILVERMARCHES_SAPLING = registerNoItem("potted_robust_silvermarches_sapling", () -> new FlowerPotBlock(ROBUST_SILVERMARCHES_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ROBUST_SILVERLEAF_SAPLING = register("robust_silverleaf_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ROBUST_SILVERLEAF_SAPLING = registerNoItem("potted_robust_silverleaf_sapling", () -> new FlowerPotBlock(ROBUST_SILVERLEAF_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ROBUST_RED_SAPLING = register("robust_red_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ROBUST_RED_SAPLING = registerNoItem("potted_robust_red_sapling", () -> new FlowerPotBlock(ROBUST_RED_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ROBUST_PINK_PETAL_SAPLING = register("robust_pink_petal_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ROBUST_PINK_PETAL_SAPLING = registerNoItem("potted_robust_pink_petal_sapling", () -> new FlowerPotBlock(ROBUST_PINK_PETAL_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ROBUST_ORANGE_SAPLING = register("robust_orange_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ROBUST_ORANGE_SAPLING = registerNoItem("potted_robust_orange_sapling", () -> new FlowerPotBlock(ROBUST_ORANGE_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ROBUST_DEAD_LEAF_SAPLING = register("robust_dead_leaf_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ROBUST_DEAD_LEAF_SAPLING = registerNoItem("potted_robust_dead_leaf_sapling", () -> new FlowerPotBlock(ROBUST_DEAD_LEAF_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ROBUST_AUTUMN_YELLOW_SAPLING = register("robust_autumn_yellow_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ROBUST_AUTUMN_YELLOW_SAPLING = registerNoItem("potted_robust_autumn_yellow_sapling", () -> new FlowerPotBlock(ROBUST_AUTUMN_YELLOW_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ROBUST_AUTUMN_RED_SAPLING = register("robust_autumn_red_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ROBUST_AUTUMN_RED_SAPLING = registerNoItem("potted_robust_autumn_red_sapling", () -> new FlowerPotBlock(ROBUST_AUTUMN_RED_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ROBUST_AUTUMN_PINK_SAPLING = register("robust_autumn_pink_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ROBUST_AUTUMN_PINK_SAPLING = registerNoItem("potted_robust_autumn_pink_sapling", () -> new FlowerPotBlock(ROBUST_AUTUMN_PINK_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ROBUST_AUTUMN_ORANGE_SAPLING = register("robust_autumn_orange_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ROBUST_AUTUMN_ORANGE_SAPLING = registerNoItem("potted_robust_autumn_orange_sapling", () -> new FlowerPotBlock(ROBUST_AUTUMN_ORANGE_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ROBUST_DARK_AUTUMN_ORANGE_SAPLING = register("robust_dark_autumn_orange_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ROBUST_DARK_AUTUMN_ORANGE_SAPLING = registerNoItem("potted_robust_dark_autumn_orange_sapling", () -> new FlowerPotBlock(ROBUST_DARK_AUTUMN_ORANGE_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ROBUST_AUTUMN_BROWN_SAPLING = register("robust_autumn_brown_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ROBUST_AUTUMN_BROWN_SAPLING = registerNoItem("potted_robust_autumn_brown_sapling", () -> new FlowerPotBlock(ROBUST_AUTUMN_BROWN_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> DARK_AUTUMN_BIRCH_SAPLING = register("dark_autumn_birch_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_DARK_AUTUMN_BIRCH_SAPLING = registerNoItem("potted_dark_autumn_birch_sapling", () -> new FlowerPotBlock(DARK_AUTUMN_BIRCH_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> AUTUMN_BIRCH_SAPLING = register("autumn_birch_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_AUTUMN_BIRCH_SAPLING = registerNoItem("potted_autumn_birch_sapling", () -> new FlowerPotBlock(AUTUMN_BIRCH_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> DARK_BIRCH_TREE_SAPLING = register("dark_birch_tree_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_DARK_BIRCH_TREE_SAPLING = registerNoItem("potted_dark_birch_tree_sapling", () -> new FlowerPotBlock(DARK_BIRCH_TREE_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BIRCH_TREE_SAPLING = register("birch_tree_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BIRCH_TREE_SAPLING = registerNoItem("potted_birch_tree_sapling", () -> new FlowerPotBlock(BIRCH_TREE_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> DARK_BROAD_BIRCH_TREE_SAPLING = register("dark_broad_birch_tree_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_DARK_BROAD_BIRCH_TREE_SAPLING = registerNoItem("potted_dark_broad_birch_tree_sapling", () -> new FlowerPotBlock(DARK_BROAD_BIRCH_TREE_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BROAD_BIRCH_TREE_SAPLING = register("broad_birch_tree_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BROAD_BIRCH_TREE_SAPLING = registerNoItem("potted_broad_birch_tree_sapling", () -> new FlowerPotBlock(BROAD_BIRCH_TREE_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> CEDAR_TREE_SAPLING = register("cedar_tree_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_CEDAR_TREE_SAPLING = registerNoItem("potted_cedar_tree_sapling", () -> new FlowerPotBlock(CEDAR_TREE_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SPRUCE_TREE_SAPLING = register("spruce_tree_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_SPRUCE_TREE_SAPLING = registerNoItem("potted_spruce_tree_sapling", () -> new FlowerPotBlock(SPRUCE_TREE_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> DARK_PINE_SAPLING = register("dark_pine_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_DARK_PINE_SAPLING = registerNoItem("potted_dark_pine_sapling", () -> new FlowerPotBlock(DARK_PINE_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> TALL_REDWOOD_SAPLING = register("tall_redwood_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_TALL_REDWOOD_SAPLING = registerNoItem("potted_tall_redwood_sapling", () -> new FlowerPotBlock(TALL_REDWOOD_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> REDWOOD_SAPLING = register("redwood_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_REDWOOD_SAPLING = registerNoItem("potted_redwood_sapling", () -> new FlowerPotBlock(REDWOOD_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> FIR_SAPLING = register("fir_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_FIR_SAPLING = registerNoItem("potted_fir_sapling", () -> new FlowerPotBlock(FIR_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> PINE_TREE_SAPLING = register("pine_tree_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_PINE_TREE_SAPLING = registerNoItem("potted_pine_tree_sapling", () -> new FlowerPotBlock(PINE_TREE_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> WILDLEAFED_SAPLING = register("wildleafed_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_WILDLEAFED_SAPLING = registerNoItem("potted_wildleafed_sapling", () -> new FlowerPotBlock(WILDLEAFED_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> DEAD_TWIG = register("dead_twig", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_DEAD_TWIG = registerNoItem("potted_dead_twig", () -> new FlowerPotBlock(DEAD_TWIG.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> AUTUMN_TWIG = register("autumn_twig", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_AUTUMN_TWIG = registerNoItem("potted_autumn_twig", () -> new FlowerPotBlock(AUTUMN_TWIG.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BROWN_TWIG = register("brown_twig", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BROWN_TWIG = registerNoItem("potted_brown_twig", () -> new FlowerPotBlock(BROWN_TWIG.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> DARK_ORANGE_TWIG = register("dark_orange_twig", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_DARK_ORANGE_TWIG = registerNoItem("potted_dark_orange_twig", () -> new FlowerPotBlock(DARK_ORANGE_TWIG.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ORANGE_TWIG = register("orange_twig", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ORANGE_TWIG = registerNoItem("potted_orange_twig", () -> new FlowerPotBlock(ORANGE_TWIG.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> PINK_TWIG = register("pink_twig", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_PINK_TWIG = registerNoItem("potted_pink_twig", () -> new FlowerPotBlock(PINK_TWIG.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> RED_TWIG = register("red_twig", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_RED_TWIG = registerNoItem("potted_red_twig", () -> new FlowerPotBlock(RED_TWIG.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> YELLOW_TWIG = register("yellow_twig", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_YELLOW_TWIG = registerNoItem("potted_yellow_twig", () -> new FlowerPotBlock(YELLOW_TWIG.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> TRADITIONAL_OLIVE_SAPLING = register("traditional_olive_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_TRADITIONAL_OLIVE_SAPLING = registerNoItem("potted_traditional_olive_sapling", () -> new FlowerPotBlock(TRADITIONAL_OLIVE_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> TRADITIONAL_GREEN_SAPLING = register("traditional_green_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_TRADITIONAL_GREEN_SAPLING = registerNoItem("potted_traditional_green_sapling", () -> new FlowerPotBlock(TRADITIONAL_GREEN_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> TRADITIONAL_DARK_GREEN_SAPLING = register("traditional_dark_green_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_TRADITIONAL_DARK_GREEN_SAPLING = registerNoItem("potted_traditional_dark_green_sapling", () -> new FlowerPotBlock(TRADITIONAL_DARK_GREEN_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> WOODY_SHRUB_SAPLING = register("woody_shrub_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_WOODY_SHRUB_SAPLING = registerNoItem("potted_woody_shrub_sapling", () -> new FlowerPotBlock(WOODY_SHRUB_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> LEAFY_SHRUB_SAPLING = register("leafy_shrub_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_LEAFY_SHRUB_SAPLING = registerNoItem("potted_leafy_shrub_sapling", () -> new FlowerPotBlock(LEAFY_SHRUB_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> JUNGLE_POD_SAPLING = register("jungle_pod_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_JUNGLE_POD_SAPLING = registerNoItem("potted_jungle_pod_sapling", () -> new FlowerPotBlock(JUNGLE_POD_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> JUNGLE_FRUIT_SAPLING = register("jungle_fruit_sapling", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_JUNGLE_FRUIT_SAPLING = registerNoItem("potted_jungle_fruit_sapling", () -> new FlowerPotBlock(JUNGLE_FRUIT_SAPLING.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SLIME_EGGS = register("slime_eggs", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_SLIME_EGGS = registerNoItem("potted_slime_eggs", () -> new FlowerPotBlock(SLIME_EGGS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> POISONOUS_MUSHROOM = register("poisonous_mushroom", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_POISONOUS_MUSHROOM = registerNoItem("potted_poisonous_mushroom", () -> new FlowerPotBlock(POISONOUS_MUSHROOM.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> TALL_AUTUMN_MUSHROOMS = register("tall_autumn_mushrooms", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_TALL_AUTUMN_MUSHROOMS = registerNoItem("potted_tall_autumn_mushrooms", () -> new FlowerPotBlock(TALL_AUTUMN_MUSHROOMS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SMALL_AUTUMN_MUSHROOM = register("small_autumn_mushroom", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_SMALL_AUTUMN_MUSHROOM = registerNoItem("potted_small_autumn_mushroom", () -> new FlowerPotBlock(SMALL_AUTUMN_MUSHROOM.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BUTTON_MUSHROOM_CLUSTER = register("button_mushroom_cluster", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BUTTON_MUSHROOM_CLUSTER = registerNoItem("potted_button_mushroom_cluster", () -> new FlowerPotBlock(BUTTON_MUSHROOM_CLUSTER.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> MIXED_BEIGE_CAPS_AND_TOADSTOOLS = register("mixed_beige_caps_and_toadstools", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_MIXED_BEIGE_CAPS_AND_TOADSTOOLS = registerNoItem("potted_mixed_beige_caps_and_toadstools", () -> new FlowerPotBlock(MIXED_BEIGE_CAPS_AND_TOADSTOOLS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> MIXED_BEIGE_CAPS = register("mixed_beige_caps", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_MIXED_BEIGE_CAPS = registerNoItem("potted_mixed_beige_caps", () -> new FlowerPotBlock(MIXED_BEIGE_CAPS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ALL_BEIGE_CAPS = register("all_beige_caps", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ALL_BEIGE_CAPS = registerNoItem("potted_all_beige_caps", () -> new FlowerPotBlock(ALL_BEIGE_CAPS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> TOADSTOOLSTYLE_BEIGE_CAPS = register("toadstoolstyle_beige_caps", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_TOADSTOOLSTYLE_BEIGE_CAPS = registerNoItem("potted_toadstoolstyle_beige_caps", () -> new FlowerPotBlock(TOADSTOOLSTYLE_BEIGE_CAPS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SMALL_BEIGE_BUTTON_MUSHROOM = register("small_beige_button_mushroom", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_SMALL_BEIGE_BUTTON_MUSHROOM = registerNoItem("potted_small_beige_button_mushroom", () -> new FlowerPotBlock(SMALL_BEIGE_BUTTON_MUSHROOM.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SMALL_DEATHCAP_CLUSTERS = register("small_deathcap_clusters", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_SMALL_DEATHCAP_CLUSTERS = registerNoItem("potted_small_deathcap_clusters", () -> new FlowerPotBlock(SMALL_DEATHCAP_CLUSTERS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SMALL_DEATHCAPS = register("small_deathcaps", () -> new FlowerDefaultEffectBlock(PROP_16));
    public static final RegistryObject<FlowerPotBlock> POTTED_SMALL_DEATHCAPS = registerNoItem("potted_small_deathcaps", () -> new FlowerPotBlock(SMALL_DEATHCAPS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SMALL_GOLDEN_BUTTON_MUSHROOM = register("small_golden_button_mushroom", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_SMALL_GOLDEN_BUTTON_MUSHROOM = registerNoItem("potted_small_golden_button_mushroom", () -> new FlowerPotBlock(SMALL_GOLDEN_BUTTON_MUSHROOM.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SMALL_GOLDEN_TOADSTOOL = register("small_golden_toadstool", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_SMALL_GOLDEN_TOADSTOOL = registerNoItem("potted_small_golden_toadstool", () -> new FlowerPotBlock(SMALL_GOLDEN_TOADSTOOL.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SMALL_RED_BUTTON_MUSHROOM = register("small_red_button_mushroom", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_SMALL_RED_BUTTON_MUSHROOM = registerNoItem("potted_small_red_button_mushroom", () -> new FlowerPotBlock(SMALL_RED_BUTTON_MUSHROOM.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SMALL_MIXED_TOADSTOOLS_AND_BEIGE_CAPS = register("small_mixed_toadstools_and_beige_caps", () -> new FlowerDefaultEffectBlock(PROP_16));
    public static final RegistryObject<FlowerPotBlock> POTTED_SMALL_MIXED_TOADSTOOLS_AND_BEIGE_CAPS = registerNoItem("potted_small_mixed_toadstools_and_beige_caps", () -> new FlowerPotBlock(SMALL_MIXED_TOADSTOOLS_AND_BEIGE_CAPS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SMALL_MIXED_TOADSTOOLS = register("small_mixed_toadstools", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_SMALL_MIXED_TOADSTOOLS = registerNoItem("potted_small_mixed_toadstools", () -> new FlowerPotBlock(SMALL_MIXED_TOADSTOOLS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> TALL_TOADSTOOLS = register("tall_toadstools", () -> new FlowerDefaultEffectBlock(PROP_16));
    public static final RegistryObject<FlowerPotBlock> POTTED_TALL_TOADSTOOLS = registerNoItem("potted_tall_toadstools", () -> new FlowerPotBlock(TALL_TOADSTOOLS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> RED_TOADSTOOLS_MINI_CAPS = register("red_toadstools_mini_caps", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_RED_TOADSTOOLS_MINI_CAPS = registerNoItem("potted_red_toadstools_mini_caps", () -> new FlowerPotBlock(RED_TOADSTOOLS_MINI_CAPS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SMALL__RED_TOADSTOOLS = register("small__red_toadstools", () -> new FlowerDefaultEffectBlock(PROP_16));
    public static final RegistryObject<FlowerPotBlock> POTTED_SMALL__RED_TOADSTOOLS = registerNoItem("potted_small__red_toadstools", () -> new FlowerPotBlock(SMALL__RED_TOADSTOOLS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SMALL_RED_MUSHROOM = register("small_red_mushroom", () -> new FlowerDefaultEffectBlock(PROP_16));
    public static final RegistryObject<FlowerPotBlock> POTTED_SMALL_RED_MUSHROOM = registerNoItem("potted_small_red_mushroom", () -> new FlowerPotBlock(SMALL_RED_MUSHROOM.get(), PROP_24));
    public static final RegistryObject<TallFlowerBlock> MIXED_SUNFLOWERS = register("mixed_sunflowers", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> RED_SUNFLOWERS = register("red_sunflowers", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> WHITE_SUNFLOWERS = register("white_sunflowers", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> GOLD_SUNFLOWERS = register("gold_sunflowers", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> TALL_DEATHCAPS = register("tall_deathcaps", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> ROAMIN_MUSHROOM = register("roamin_mushroom", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> LARGE_TOADSTOOLS = register("large_toadstools", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> LARGE_BUTTOM_MUSHROOMS = register("large_buttom_mushrooms", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> TALL_OLIVE_CACTI = register("tall_olive_cacti", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> TALL_GREEN_CACTI = register("tall_green_cacti", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> TALL_BROWN_CACTI = register("tall_brown_cacti", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> CORNSTALKS = register("cornstalks", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> BAMBOO_THICKETS = register("bamboo_thickets", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> GREEN_GRAPES = register("green_grapes", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> RED_GRAPES = register("red_grapes", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> TALL_CATTAILS = register("tall_cattails", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> SHORT_TOPIARY_BUSHES = register("short_topiary_bushes", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> LARGE_TOPIARY_BUSHES = register("large_topiary_bushes", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> THIN_TOPIARY_BUSHES = register("thin_topiary_bushes", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> PINEAPPLE_BUSH = register("pineapple_bush", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> PINEAPPLE_BUSHES = register("pineapple_bushes", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> TROPICAL_FRUITS_BUSHES = register("tropical_fruits_bushes", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> RED_JUNGLE_SHRUBS = register("red_jungle_shrubs", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> RED_FLOWER_JUNGLE_SHRUBS = register("red_flower_jungle_shrubs", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> WHITE_FLOWERED_JUNGLE_SHRUBS = register("white_flowered_jungle_shrubs", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> GREEN_JUNGLE_SHRUBS = register("green_jungle_shrubs", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> DARK_GREEN_JUNGLE_SHRUBS = register("dark_green_jungle_shrubs", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> RED_BUSHES = register("red_bushes", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> AUTUMN_BUSHES = register("autumn_bushes", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> DEAD_BUSHES = register("dead_bushes", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> GREEN_BUSHES = register("green_bushes", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> DARK_GREEN_BUSHES = register("dark_green_bushes", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> MARUXS_CAT_BUSHES = register("maruxs_cat_bushes", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> SQUAT_SHRUBS = register("squat_shrubs", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> GREEN_PINE_BUSHES = register("green_pine_bushes", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> BLUE_PINE_BUSHES = register("blue_pine_bushes", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> BLUE_TALL_FLAX = register("blue_tall_flax", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> PURPLE_TALL_FLAX = register("purple_tall_flax", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> TALL_LAVENDER = register("tall_lavender", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> TALL_PAEONIAS = register("tall_paeonias", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> GOLDEN_TALL_ROSES = register("golden_tall_roses", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> LEAFY_TALL_ROSES = register("leafy_tall_roses", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<TallFlowerBlock> TALL_ROSES = register("tall_roses", () -> new TallFlowerBlock(PROP_16));
    public static final RegistryObject<FlowerDefaultEffectBlock> MARUXS_CAT_FLOWER = register("maruxs_cat_flower", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_MARUXS_CAT_FLOWER = registerNoItem("potted_maruxs_cat_flower", () -> new FlowerPotBlock(MARUXS_CAT_FLOWER.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> LIGHT_DEMI_CREEPER_STATUES = register("light_demi_creeper_statues", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_LIGHT_DEMI_CREEPER_STATUES = registerNoItem("potted_light_demi_creeper_statues", () -> new FlowerPotBlock(LIGHT_DEMI_CREEPER_STATUES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> LIGHT_CLASSIC_CREEPER_STATUES = register("light_classic_creeper_statues", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_LIGHT_CLASSIC_CREEPER_STATUES = registerNoItem("potted_light_classic_creeper_statues", () -> new FlowerPotBlock(LIGHT_CLASSIC_CREEPER_STATUES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> LIGHT_CREEPER_STATUES = register("light_creeper_statues", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_LIGHT_CREEPER_STATUES = registerNoItem("potted_light_creeper_statues", () -> new FlowerPotBlock(LIGHT_CREEPER_STATUES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> DARK_DEMI_CREEPER_STATUES = register("dark_demi_creeper_statues", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_DARK_DEMI_CREEPER_STATUES = registerNoItem("potted_dark_demi_creeper_statues", () -> new FlowerPotBlock(DARK_DEMI_CREEPER_STATUES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> DARK_CLASSIC_CREEPER_STATUES = register("dark_classic_creeper_statues", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_DARK_CLASSIC_CREEPER_STATUES = registerNoItem("potted_dark_classic_creeper_statues", () -> new FlowerPotBlock(DARK_CLASSIC_CREEPER_STATUES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> DARK_CREEPER_STATUES = register("dark_creeper_statues", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_DARK_CREEPER_STATUES = registerNoItem("potted_dark_creeper_statues", () -> new FlowerPotBlock(DARK_CREEPER_STATUES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> GREEN_DEMI_CREEPER_STATUES = register("green_demi_creeper_statues", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_GREEN_DEMI_CREEPER_STATUES = registerNoItem("potted_green_demi_creeper_statues", () -> new FlowerPotBlock(GREEN_DEMI_CREEPER_STATUES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> GREEN_CLASSIC_CREEPER_STATUES = register("green_classic_creeper_statues", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_GREEN_CLASSIC_CREEPER_STATUES = registerNoItem("potted_green_classic_creeper_statues", () -> new FlowerPotBlock(GREEN_CLASSIC_CREEPER_STATUES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> GREEN_CREEPER_STATUES = register("green_creeper_statues", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_GREEN_CREEPER_STATUES = registerNoItem("potted_green_creeper_statues", () -> new FlowerPotBlock(GREEN_CREEPER_STATUES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> MONONOKE_SPIRITS = register("mononoke_spirits", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_MONONOKE_SPIRITS = registerNoItem("potted_mononoke_spirits", () -> new FlowerPotBlock(MONONOKE_SPIRITS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BRILLIANT_STAR = register("brilliant_star", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BRILLIANT_STAR = registerNoItem("potted_brilliant_star", () -> new FlowerPotBlock(BRILLIANT_STAR.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SCORCHING_FIRE = register("scorching_fire", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_SCORCHING_FIRE = registerNoItem("potted_scorching_fire", () -> new FlowerPotBlock(SCORCHING_FIRE.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> WHITE_TULIP_PATCHES = register("white_tulip_patches", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_WHITE_TULIP_PATCHES = registerNoItem("potted_white_tulip_patches", () -> new FlowerPotBlock(WHITE_TULIP_PATCHES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> WHITE_TULIPS = register("white_tulips", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_WHITE_TULIPS = registerNoItem("potted_white_tulips", () -> new FlowerPotBlock(WHITE_TULIPS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> PINK_TULIP_PATCHES = register("pink_tulip_patches", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_PINK_TULIP_PATCHES = registerNoItem("potted_pink_tulip_patches", () -> new FlowerPotBlock(PINK_TULIP_PATCHES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> PINK_TULIPS = register("pink_tulips", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_PINK_TULIPS = registerNoItem("potted_pink_tulips", () -> new FlowerPotBlock(PINK_TULIPS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> PURPLE_TULIP_PATCHES = register("purple_tulip_patches", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_PURPLE_TULIP_PATCHES = registerNoItem("potted_purple_tulip_patches", () -> new FlowerPotBlock(PURPLE_TULIP_PATCHES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> PURPLE_TULIPS = register("purple_tulips", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_PURPLE_TULIPS = registerNoItem("potted_purple_tulips", () -> new FlowerPotBlock(PURPLE_TULIPS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> RED_TULIP_PATCHES = register("red_tulip_patches", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_RED_TULIP_PATCHES = registerNoItem("potted_red_tulip_patches", () -> new FlowerPotBlock(RED_TULIP_PATCHES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> RED_TULIPS = register("red_tulips", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_RED_TULIPS = registerNoItem("potted_red_tulips", () -> new FlowerPotBlock(RED_TULIPS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ORANGE_TULIP_PATCHES = register("orange_tulip_patches", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ORANGE_TULIP_PATCHES = registerNoItem("potted_orange_tulip_patches", () -> new FlowerPotBlock(ORANGE_TULIP_PATCHES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ORANGE_TULIPS = register("orange_tulips", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ORANGE_TULIPS = registerNoItem("potted_orange_tulips", () -> new FlowerPotBlock(ORANGE_TULIPS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> YELLOW_TULIP_PATCHES = register("yellow_tulip_patches", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_YELLOW_TULIP_PATCHES = registerNoItem("potted_yellow_tulip_patches", () -> new FlowerPotBlock(YELLOW_TULIP_PATCHES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> YELLOW_TULIPS = register("yellow_tulips", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_YELLOW_TULIPS = registerNoItem("potted_yellow_tulips", () -> new FlowerPotBlock(YELLOW_TULIPS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> GRAND_MULTICOLOUR_HYBRID = register("grand_multicolour_hybrid", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_GRAND_MULTICOLOUR_HYBRID = registerNoItem("potted_grand_multicolour_hybrid", () -> new FlowerPotBlock(GRAND_MULTICOLOUR_HYBRID.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> LARGE_MULTICOLOUR_HYBRID = register("large_multicolour_hybrid", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_LARGE_MULTICOLOUR_HYBRID = registerNoItem("potted_large_multicolour_hybrid", () -> new FlowerPotBlock(LARGE_MULTICOLOUR_HYBRID.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> MEDIUM_MULTICOLOUR_HYBRID = register("medium_multicolour_hybrid", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_MEDIUM_MULTICOLOUR_HYBRID = registerNoItem("potted_medium_multicolour_hybrid", () -> new FlowerPotBlock(MEDIUM_MULTICOLOUR_HYBRID.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SMALL_MULTICOLOUR_HYBRID = register("small_multicolour_hybrid", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_SMALL_MULTICOLOUR_HYBRID = registerNoItem("potted_small_multicolour_hybrid", () -> new FlowerPotBlock(SMALL_MULTICOLOUR_HYBRID.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BLUERED_HYBRID = register("bluered_hybrid", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BLUERED_HYBRID = registerNoItem("potted_bluered_hybrid", () -> new FlowerPotBlock(BLUERED_HYBRID.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> YELLOWRED_HYBRID = register("yellowred_hybrid", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_YELLOWRED_HYBRID = registerNoItem("potted_yellowred_hybrid", () -> new FlowerPotBlock(YELLOWRED_HYBRID.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> YELLOWBLUE_HYBRID = register("yellowblue_hybrid", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_YELLOWBLUE_HYBRID = registerNoItem("potted_yellowblue_hybrid", () -> new FlowerPotBlock(YELLOWBLUE_HYBRID.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> AUTUMN_TUFT = register("autumn_tuft", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_AUTUMN_TUFT = registerNoItem("potted_autumn_tuft", () -> new FlowerPotBlock(AUTUMN_TUFT.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> DEAD_TUFT = register("dead_tuft", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_DEAD_TUFT = registerNoItem("potted_dead_tuft", () -> new FlowerPotBlock(DEAD_TUFT.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> GREEN_TUFT = register("green_tuft", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_GREEN_TUFT = registerNoItem("potted_green_tuft", () -> new FlowerPotBlock(GREEN_TUFT.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> HEALTHY_WHITE_TURNIPS = register("healthy_white_turnips", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_HEALTHY_WHITE_TURNIPS = registerNoItem("potted_healthy_white_turnips", () -> new FlowerPotBlock(HEALTHY_WHITE_TURNIPS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> HEARTY_PURPLE_TURNIPS = register("hearty_purple_turnips", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_HEARTY_PURPLE_TURNIPS = registerNoItem("potted_hearty_purple_turnips", () -> new FlowerPotBlock(HEARTY_PURPLE_TURNIPS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> DELICIOUS_CARROTS = register("delicious_carrots", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_DELICIOUS_CARROTS = registerNoItem("potted_delicious_carrots", () -> new FlowerPotBlock(DELICIOUS_CARROTS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> FAT_BROWN_CACTUS = register("fat_brown_cactus", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_FAT_BROWN_CACTUS = registerNoItem("potted_fat_brown_cactus", () -> new FlowerPotBlock(FAT_BROWN_CACTUS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BRANCHING_BROWN_CACTI = register("branching_brown_cacti", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BRANCHING_BROWN_CACTI = registerNoItem("potted_branching_brown_cacti", () -> new FlowerPotBlock(BRANCHING_BROWN_CACTI.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BROWN_CACTI = register("brown_cacti", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BROWN_CACTI = registerNoItem("potted_brown_cacti", () -> new FlowerPotBlock(BROWN_CACTI.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BRANCHING_OLIVE_CACTI = register("branching_olive_cacti", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BRANCHING_OLIVE_CACTI = registerNoItem("potted_branching_olive_cacti", () -> new FlowerPotBlock(BRANCHING_OLIVE_CACTI.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> OLIVE_CACTI = register("olive_cacti", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_OLIVE_CACTI = registerNoItem("potted_olive_cacti", () -> new FlowerPotBlock(OLIVE_CACTI.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> FAT_CACTUS = register("fat_cactus", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_FAT_CACTUS = registerNoItem("potted_fat_cactus", () -> new FlowerPotBlock(FAT_CACTUS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BRANCHING_GRASS_CACTI = register("branching_grass_cacti", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BRANCHING_GRASS_CACTI = registerNoItem("potted_branching_grass_cacti", () -> new FlowerPotBlock(BRANCHING_GRASS_CACTI.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> GRASS_CACTI = register("grass_cacti", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_GRASS_CACTI = registerNoItem("potted_grass_cacti", () -> new FlowerPotBlock(GRASS_CACTI.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BAOMBOO_SHOOTS = register("baomboo_shoots", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BAOMBOO_SHOOTS = registerNoItem("potted_baomboo_shoots", () -> new FlowerPotBlock(BAOMBOO_SHOOTS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> LEAFY_SPROUTS = register("leafy_sprouts", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_LEAFY_SPROUTS = registerNoItem("potted_leafy_sprouts", () -> new FlowerPotBlock(LEAFY_SPROUTS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SWAMPY_ROOTS = register("swampy_roots", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_SWAMPY_ROOTS = registerNoItem("potted_swampy_roots", () -> new FlowerPotBlock(SWAMPY_ROOTS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> CATTAIL_PATCHES = register("cattail_patches", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_CATTAIL_PATCHES = registerNoItem("potted_cattail_patches", () -> new FlowerPotBlock(CATTAIL_PATCHES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> CATTAILS = register("cattails", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_CATTAILS = registerNoItem("potted_cattails", () -> new FlowerPotBlock(CATTAILS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> TALL_AUTUMN_SHROOMS = register("tall_autumn_shrooms", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_TALL_AUTUMN_SHROOMS = registerNoItem("potted_tall_autumn_shrooms", () -> new FlowerPotBlock(TALL_AUTUMN_SHROOMS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> AUTUMN_SHROOMS = register("autumn_shrooms", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_AUTUMN_SHROOMS = registerNoItem("potted_autumn_shrooms", () -> new FlowerPotBlock(AUTUMN_SHROOMS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> TALL_DEATHCAP_SHROOMS = register("tall_deathcap_shrooms", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_TALL_DEATHCAP_SHROOMS = registerNoItem("potted_tall_deathcap_shrooms", () -> new FlowerPotBlock(TALL_DEATHCAP_SHROOMS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> DEATHCAP_SHROOM_CLUSTERS = register("deathcap_shroom_clusters", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_DEATHCAP_SHROOM_CLUSTERS = registerNoItem("potted_deathcap_shroom_clusters", () -> new FlowerPotBlock(DEATHCAP_SHROOM_CLUSTERS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> DEATHCAP_SHROOM = register("deathcap_shroom", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_DEATHCAP_SHROOM = registerNoItem("potted_deathcap_shroom", () -> new FlowerPotBlock(DEATHCAP_SHROOM.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> DARK_AUTUMN_SHRUBS = register("dark_autumn_shrubs", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_DARK_AUTUMN_SHRUBS = registerNoItem("potted_dark_autumn_shrubs", () -> new FlowerPotBlock(DARK_AUTUMN_SHRUBS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> AUTUMN_SHRUBS = register("autumn_shrubs", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_AUTUMN_SHRUBS = registerNoItem("potted_autumn_shrubs", () -> new FlowerPotBlock(AUTUMN_SHRUBS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> DYING_SHRUBS = register("dying_shrubs", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_DYING_SHRUBS = registerNoItem("potted_dying_shrubs", () -> new FlowerPotBlock(DYING_SHRUBS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> DARK_GREEN_SHRUBS = register("dark_green_shrubs", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_DARK_GREEN_SHRUBS = registerNoItem("potted_dark_green_shrubs", () -> new FlowerPotBlock(DARK_GREEN_SHRUBS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> GREEN_SHRUBS = register("green_shrubs", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_GREEN_SHRUBS = registerNoItem("potted_green_shrubs", () -> new FlowerPotBlock(GREEN_SHRUBS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SHORT_WOODY_SHRUB = register("short_woody_shrub", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_SHORT_WOODY_SHRUB = registerNoItem("potted_short_woody_shrub", () -> new FlowerPotBlock(SHORT_WOODY_SHRUB.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> GREEN_PINE_SHRUB = register("green_pine_shrub", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_GREEN_PINE_SHRUB = registerNoItem("potted_green_pine_shrub", () -> new FlowerPotBlock(GREEN_PINE_SHRUB.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BLUE_PINE_SHRUB = register("blue_pine_shrub", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BLUE_PINE_SHRUB = registerNoItem("potted_blue_pine_shrub", () -> new FlowerPotBlock(BLUE_PINE_SHRUB.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> GROUND_COVER_VIOLETS = register("ground_cover_violets", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_GROUND_COVER_VIOLETS = registerNoItem("potted_ground_cover_violets", () -> new FlowerPotBlock(GROUND_COVER_VIOLETS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> PURPLE_FIELD_VIOLETS = register("purple_field_violets", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_PURPLE_FIELD_VIOLETS = registerNoItem("potted_purple_field_violets", () -> new FlowerPotBlock(PURPLE_FIELD_VIOLETS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> PURPLE_VIOLETS = register("purple_violets", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_PURPLE_VIOLETS = registerNoItem("potted_purple_violets", () -> new FlowerPotBlock(PURPLE_VIOLETS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ALLIUMS = register("alliums", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ALLIUMS = registerNoItem("potted_alliums", () -> new FlowerPotBlock(ALLIUMS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SPROUTING_SYRINGA = register("sprouting_syringa", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_SPROUTING_SYRINGA = registerNoItem("potted_sprouting_syringa", () -> new FlowerPotBlock(SPROUTING_SYRINGA.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> WILD_PAEONIAS = register("wild_paeonias", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_WILD_PAEONIAS = registerNoItem("potted_wild_paeonias", () -> new FlowerPotBlock(WILD_PAEONIAS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> LIGHT_PURPLE_PAEONIAS = register("light_purple_paeonias", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_LIGHT_PURPLE_PAEONIAS = registerNoItem("potted_light_purple_paeonias", () -> new FlowerPotBlock(LIGHT_PURPLE_PAEONIAS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> PINK_DASIES = register("pink_dasies", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_PINK_DASIES = registerNoItem("potted_pink_dasies", () -> new FlowerPotBlock(PINK_DASIES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> PINK_HIBISCUS = register("pink_hibiscus", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_PINK_HIBISCUS = registerNoItem("potted_pink_hibiscus", () -> new FlowerPotBlock(PINK_HIBISCUS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> GROUND_COVER_WILDFLOWERS = register("ground_cover_wildflowers", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_GROUND_COVER_WILDFLOWERS = registerNoItem("potted_ground_cover_wildflowers", () -> new FlowerPotBlock(GROUND_COVER_WILDFLOWERS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SMALL_CLUSTERED_WILDFLOWERS = register("small_clustered_wildflowers", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_SMALL_CLUSTERED_WILDFLOWERS = registerNoItem("potted_small_clustered_wildflowers", () -> new FlowerPotBlock(SMALL_CLUSTERED_WILDFLOWERS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> WILDFLOWER_SHRUBBERIES = register("wildflower_shrubberies", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_WILDFLOWER_SHRUBBERIES = registerNoItem("potted_wildflower_shrubberies", () -> new FlowerPotBlock(WILDFLOWER_SHRUBBERIES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> WILDFLOWERS = register("wildflowers", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_WILDFLOWERS = registerNoItem("potted_wildflowers", () -> new FlowerPotBlock(WILDFLOWERS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BLUE_HYDRANGEAS = register("blue_hydrangeas", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BLUE_HYDRANGEAS = registerNoItem("potted_blue_hydrangeas", () -> new FlowerPotBlock(BLUE_HYDRANGEAS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BLUE_ORCHIDS = register("blue_orchids", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BLUE_ORCHIDS = registerNoItem("potted_blue_orchids", () -> new FlowerPotBlock(BLUE_ORCHIDS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BLUE_FLAX = register("blue_flax", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BLUE_FLAX = registerNoItem("potted_blue_flax", () -> new FlowerPotBlock(BLUE_FLAX.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BLUE_CHRYSANTHEMUMS = register("blue_chrysanthemums", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BLUE_CHRYSANTHEMUMS = registerNoItem("potted_blue_chrysanthemums", () -> new FlowerPotBlock(BLUE_CHRYSANTHEMUMS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> GROUND_COVER_MORNING_GLORIES = register("ground_cover_morning_glories", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_GROUND_COVER_MORNING_GLORIES = registerNoItem("potted_ground_cover_morning_glories", () -> new FlowerPotBlock(GROUND_COVER_MORNING_GLORIES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> MORNING_FIELD_GLORIES = register("morning_field_glories", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_MORNING_FIELD_GLORIES = registerNoItem("potted_morning_field_glories", () -> new FlowerPotBlock(MORNING_FIELD_GLORIES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> CLUSTERED_MORNING_GLORIES = register("clustered_morning_glories", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_CLUSTERED_MORNING_GLORIES = registerNoItem("potted_clustered_morning_glories", () -> new FlowerPotBlock(CLUSTERED_MORNING_GLORIES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> PALE_HOUSTONIAS = register("pale_houstonias", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_PALE_HOUSTONIAS = registerNoItem("potted_pale_houstonias", () -> new FlowerPotBlock(PALE_HOUSTONIAS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BABYS_BREATH = register("babys_breath", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BABYS_BREATH = registerNoItem("potted_babys_breath", () -> new FlowerPotBlock(BABYS_BREATH.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> WILD_PARSLEY_BLOOMS = register("wild_parsley_blooms", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_WILD_PARSLEY_BLOOMS = registerNoItem("potted_wild_parsley_blooms", () -> new FlowerPotBlock(WILD_PARSLEY_BLOOMS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> GROUND_COVER_ANENOMES = register("ground_cover_anenomes", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_GROUND_COVER_ANENOMES = registerNoItem("potted_ground_cover_anenomes", () -> new FlowerPotBlock(GROUND_COVER_ANENOMES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> WHITE_ANENOME = register("white_anenome", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_WHITE_ANENOME = registerNoItem("potted_white_anenome", () -> new FlowerPotBlock(WHITE_ANENOME.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> WHITE_ROSES = register("white_roses", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_WHITE_ROSES = registerNoItem("potted_white_roses", () -> new FlowerPotBlock(WHITE_ROSES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> CREAMY_OXEYE_DAISIES = register("creamy_oxeye_daisies", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_CREAMY_OXEYE_DAISIES = registerNoItem("potted_creamy_oxeye_daisies", () -> new FlowerPotBlock(CREAMY_OXEYE_DAISIES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> LARGE_NETHER_LEAVES = register("large_nether_leaves", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_LARGE_NETHER_LEAVES = registerNoItem("potted_large_nether_leaves", () -> new FlowerPotBlock(LARGE_NETHER_LEAVES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> FANCIFUL_NETHER_LEAVES = register("fanciful_nether_leaves", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_FANCIFUL_NETHER_LEAVES = registerNoItem("potted_fanciful_nether_leaves", () -> new FlowerPotBlock(FANCIFUL_NETHER_LEAVES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> CREAMYWHITE_PEONIES = register("creamywhite_peonies", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_CREAMYWHITE_PEONIES = registerNoItem("potted_creamywhite_peonies", () -> new FlowerPotBlock(CREAMYWHITE_PEONIES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> WILD_GOLDEN_ROSES = register("wild_golden_roses", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_WILD_GOLDEN_ROSES = registerNoItem("potted_wild_golden_roses", () -> new FlowerPotBlock(WILD_GOLDEN_ROSES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> DARKLEAF_WILD_GOLDEN_ROSES = register("darkleaf_wild_golden_roses", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_DARKLEAF_WILD_GOLDEN_ROSES = registerNoItem("potted_darkleaf_wild_golden_roses", () -> new FlowerPotBlock(DARKLEAF_WILD_GOLDEN_ROSES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> GROUND_COVER_NASTURTIUMS = register("ground_cover_nasturtiums", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_GROUND_COVER_NASTURTIUMS = registerNoItem("potted_ground_cover_nasturtiums", () -> new FlowerPotBlock(GROUND_COVER_NASTURTIUMS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> CLUSTER_OF_NASTURTIUMS = register("cluster_of_nasturtiums", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_CLUSTER_OF_NASTURTIUMS = registerNoItem("potted_cluster_of_nasturtiums", () -> new FlowerPotBlock(CLUSTER_OF_NASTURTIUMS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> SINGLE_NASTURTIUM = register("single_nasturtium", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_SINGLE_NASTURTIUM = registerNoItem("potted_single_nasturtium", () -> new FlowerPotBlock(SINGLE_NASTURTIUM.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> YELLOW_NASTURTIUMS = register("yellow_nasturtiums", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_YELLOW_NASTURTIUMS = registerNoItem("potted_yellow_nasturtiums", () -> new FlowerPotBlock(YELLOW_NASTURTIUMS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> DEEP_YELLOW_BELLFLOWERS = register("deep_yellow_bellflowers", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_DEEP_YELLOW_BELLFLOWERS = registerNoItem("potted_deep_yellow_bellflowers", () -> new FlowerPotBlock(DEEP_YELLOW_BELLFLOWERS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> GROUND_COVER_ECHINACEA = register("ground_cover_echinacea", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_GROUND_COVER_ECHINACEA = registerNoItem("potted_ground_cover_echinacea", () -> new FlowerPotBlock(GROUND_COVER_ECHINACEA.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ECHINACEA_FIELD_FLOWERS = register("echinacea_field_flowers", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ECHINACEA_FIELD_FLOWERS = registerNoItem("potted_echinacea_field_flowers", () -> new FlowerPotBlock(ECHINACEA_FIELD_FLOWERS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> CLUSTER_OF_ECHINACEA = register("cluster_of_echinacea", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_CLUSTER_OF_ECHINACEA = registerNoItem("potted_cluster_of_echinacea", () -> new FlowerPotBlock(CLUSTER_OF_ECHINACEA.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ORANGE_WILD_POPPIES = register("orange_wild_poppies", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_ORANGE_WILD_POPPIES = registerNoItem("potted_orange_wild_poppies", () -> new FlowerPotBlock(ORANGE_WILD_POPPIES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> VIBRANT_MARIGOLDS = register("vibrant_marigolds", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_VIBRANT_MARIGOLDS = registerNoItem("potted_vibrant_marigolds", () -> new FlowerPotBlock(VIBRANT_MARIGOLDS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> FIERY_TULIPS = register("fiery_tulips", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_FIERY_TULIPS = registerNoItem("potted_fiery_tulips", () -> new FlowerPotBlock(FIERY_TULIPS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BRILLIANT_GINGER_PATCHES = register("brilliant_ginger_patches", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BRILLIANT_GINGER_PATCHES = registerNoItem("potted_brilliant_ginger_patches", () -> new FlowerPotBlock(BRILLIANT_GINGER_PATCHES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BRILLIANT_RED_GINGER = register("brilliant_red_ginger", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_BRILLIANT_RED_GINGER = registerNoItem("potted_brilliant_red_ginger", () -> new FlowerPotBlock(BRILLIANT_RED_GINGER.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> WINTER_POINSETTIAS = register("winter_poinsettias", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_WINTER_POINSETTIAS = registerNoItem("potted_winter_poinsettias", () -> new FlowerPotBlock(WINTER_POINSETTIAS.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> RED_LONESOME_POPPIES = register("red_lonesome_poppies", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_RED_LONESOME_POPPIES = registerNoItem("potted_red_lonesome_poppies", () -> new FlowerPotBlock(RED_LONESOME_POPPIES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> RED_POPPY_PATCHES = register("red_poppy_patches", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_RED_POPPY_PATCHES = registerNoItem("potted_red_poppy_patches", () -> new FlowerPotBlock(RED_POPPY_PATCHES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> GROUND_COVER_ROSES = register("ground_cover_roses", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_GROUND_COVER_ROSES = registerNoItem("potted_ground_cover_roses", () -> new FlowerPotBlock(GROUND_COVER_ROSES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> CLUSTER_OF_ROSES = register("cluster_of_roses", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_CLUSTER_OF_ROSES = registerNoItem("potted_cluster_of_roses", () -> new FlowerPotBlock(CLUSTER_OF_ROSES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> CLASSIC_ROSE = register("classic_rose", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_CLASSIC_ROSE = registerNoItem("potted_classic_rose", () -> new FlowerPotBlock(CLASSIC_ROSE.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> RED_ROSES = register("red_roses", () -> new FlowerDefaultEffectBlock(PROP_15));
    public static final RegistryObject<FlowerPotBlock> POTTED_RED_ROSES = registerNoItem("potted_red_roses", () -> new FlowerPotBlock(RED_ROSES.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> JUNGLE_TREE = register("jungle_tree", () -> new FlowerDefaultEffectBlock(PROP_13));
    public static final RegistryObject<FlowerPotBlock> POTTED_JUNGLE_TREE = registerNoItem("potted_jungle_tree", () -> new FlowerPotBlock(JUNGLE_TREE.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> PALM_TREE = register("palm_tree", () -> new FlowerDefaultEffectBlock(PROP_13));
    public static final RegistryObject<FlowerPotBlock> POTTED_PALM_TREE = registerNoItem("potted_palm_tree", () -> new FlowerPotBlock(PALM_TREE.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> ROBUST_OAK_TREE = register("robust_oak_tree", () -> new FlowerDefaultEffectBlock(AbstractBlock.Properties.create(new Material(MaterialColor.ADOBE, false, false, false, false, true, false, PushReaction.DESTROY)).sound(SoundType.ANVIL).hardnessAndResistance(0F,0F).doesNotBlockMovement()));
    public static final RegistryObject<FlowerPotBlock> POTTED_ROBUST_OAK_TREE = registerNoItem("potted_robust_oak_tree", () -> new FlowerPotBlock(ROBUST_OAK_TREE.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> CEDAR_BONSAI_TREE = register("cedar_bonsai_tree", () -> new FlowerDefaultEffectBlock(PROP_13));
    public static final RegistryObject<FlowerPotBlock> POTTED_CEDAR_BONSAI_TREE = registerNoItem("potted_cedar_bonsai_tree", () -> new FlowerPotBlock(CEDAR_BONSAI_TREE.get(), PROP_24));
    public static final RegistryObject<FlowerDefaultEffectBlock> BONSAI_TREE = register("bonsai_tree", () -> new FlowerDefaultEffectBlock(PROP_13));
    public static final RegistryObject<FlowerPotBlock> POTTED_BONSAI_TREE = registerNoItem("potted_bonsai_tree", () -> new FlowerPotBlock(BONSAI_TREE.get(), PROP_24));
    public static final RegistryObject<RotatedPillarBlock> SCREAMING_LOG = register("screaming_log", () -> new RotatedPillarBlock(PROP_12));
    public static final RegistryObject<RotatedPillarBlock> RUSTIC_ACACIA_LOG = register("rustic_acacia_log", () -> new RotatedPillarBlock(PROP_12));
    public static final RegistryObject<RotatedPillarBlock> RUSTIC_MYSTIC_LOG = register("rustic_mystic_log", () -> new RotatedPillarBlock(AbstractBlock.Properties.create(new Material(MaterialColor.GRASS, false, true, true, true, true, false, PushReaction.NORMAL)).sound(SoundType.WOOD).hardnessAndResistance(0.5F,0.5F)));
    public static final RegistryObject<RotatedPillarBlock> MYSTIC_LOG = register("mystic_log", () -> new RotatedPillarBlock(AbstractBlock.Properties.create(new Material(MaterialColor.GREEN_TERRACOTTA, false, true, true, true, true, false, PushReaction.NORMAL)).sound(SoundType.WOOD).hardnessAndResistance(0.5F,0.5F)));
    public static final RegistryObject<RotatedPillarBlock> RUSTIC_CHERRYWOOD_LOG = register("rustic_cherrywood_log", () -> new RotatedPillarBlock(PROP_8));
    public static final RegistryObject<RotatedPillarBlock> CHERRYWOOD_LOG = register("cherrywood_log", () -> new RotatedPillarBlock(PROP_8));
    public static final RegistryObject<RotatedPillarBlock> RUSTIC_WHITE_LOG = register("rustic_white_log", () -> new RotatedPillarBlock(AbstractBlock.Properties.create(new Material(MaterialColor.BLACK_TERRACOTTA, false, true, true, true, true, false, PushReaction.NORMAL)).sound(SoundType.WOOD).hardnessAndResistance(0.5F,0.5F)));
    public static final RegistryObject<RotatedPillarBlock> RUSTIC_REDWOOD_LOG = register("rustic_redwood_log", () -> new RotatedPillarBlock(PROP_8));
    public static final RegistryObject<RotatedPillarBlock> RUSTIC_PECAN_LOG = register("rustic_pecan_log", () -> new RotatedPillarBlock(PROP_6));
    public static final RegistryObject<RotatedPillarBlock> RUSTIC_AGED_LOG = register("rustic_aged_log", () -> new RotatedPillarBlock(PROP_6));
    public static final RegistryObject<RotatedPillarBlock> WHITE_OAK_LOG = register("white_oak_log", () -> new RotatedPillarBlock(AbstractBlock.Properties.create(new Material(MaterialColor.WOOL, false, true, true, true, true, false, PushReaction.NORMAL)).sound(SoundType.WOOD).hardnessAndResistance(0.5F,0.5F)));
    public static final RegistryObject<RotatedPillarBlock> REDWOOD_LOG = register("redwood_log", () -> new RotatedPillarBlock(PROP_6));
    public static final RegistryObject<RotatedPillarBlock> PECAN_LOG = register("pecan_log", () -> new RotatedPillarBlock(AbstractBlock.Properties.create(new Material(MaterialColor.WOOD, false, true, true, true, false, false, PushReaction.NORMAL)).sound(SoundType.WOOD).hardnessAndResistance(0.5F,0.5F)));
    public static final RegistryObject<RotatedPillarBlock> AGED_LOG = register("aged_log", () -> new RotatedPillarBlock(AbstractBlock.Properties.create(new Material(MaterialColor.CLAY, false, true, true, true, true, false, PushReaction.NORMAL)).sound(SoundType.WOOD).hardnessAndResistance(0.5F,0.5F)));
    public static final RegistryObject<RotatedPillarBlock> CLASSIC_OAK_LOG = register("classic_oak_log", () -> new RotatedPillarBlock(AbstractBlock.Properties.create(new Material(MaterialColor.CLAY, false, true, true, true, true, false, PushReaction.NORMAL)).sound(SoundType.WOOD).hardnessAndResistance(0.5F,0.5F)));
    public static final RegistryObject<Block> GIANT_RED_MUSHROOMS = register("giant_red_mushrooms", () -> new Block(AbstractBlock.Properties.create(MAT_0).sound(SoundType.NETHER_WART).hardnessAndResistance(0.5F,0.5F)));
    public static final RegistryObject<FlowerDefaultEffectBlock> ALLIUM_FLOWER = register("allium_flower", () -> new FlowerDefaultEffectBlock(AbstractBlock.Properties.create(new Material(MaterialColor.CLAY, false, false, false, false, true, false, PushReaction.DESTROY)).sound(SoundType.PLANT).hardnessAndResistance(0F,0F).doesNotBlockMovement()));
    public static final RegistryObject<FlowerPotBlock> POTTED_ALLIUM_FLOWER = registerNoItem("potted_allium_flower", () -> new FlowerPotBlock(ALLIUM_FLOWER.get(), PROP_24));
    public static final RegistryObject<Block> SILVERMARCHES_LEAVES_CLASSIC = register("silvermarches_leaves_classic", () -> new Block(PROP_1));
    public static final RegistryObject<Block> SILVER_LEAVES_CLASSIC = register("silver_leaves_classic", () -> new Block(PROP_1));
    public static final RegistryObject<Block> WHITE_PETAL_LEAVES_CLASSIC = register("white_petal_leaves_classic", () -> new Block(PROP_1));
    public static final RegistryObject<Block> PINK_PETAL_LEAVES_CLASSIC = register("pink_petal_leaves_classic", () -> new Block(PROP_1));
    public static final RegistryObject<Block> PINK_LEAVES_CLASSIC = register("pink_leaves_classic", () -> new Block(PROP_1));
    public static final RegistryObject<Block> RED_LEAVES_CLASSIC = register("red_leaves_classic", () -> new Block(PROP_1));
    public static final RegistryObject<Block> RED_AUTUMN_LEAVES_CLASSIC = register("red_autumn_leaves_classic", () -> new Block(PROP_1));
    public static final RegistryObject<Block> BROWN_LEAVES_CLASSIC = register("brown_leaves_classic", () -> new Block(PROP_1));
    public static final RegistryObject<Block> DARK_ORANGE_LEAVES_CLASSIC = register("dark_orange_leaves_classic", () -> new Block(PROP_1));
    public static final RegistryObject<Block> ORANGE_LEAVES_CLASSIC = register("orange_leaves_classic", () -> new Block(PROP_1));
    public static final RegistryObject<Block> AUTUMN_YELLOW_LEAVES_CLASSIC = register("autumn_yellow_leaves_classic", () -> new Block(PROP_1));
    public static final RegistryObject<Block> YELLOW_LEAVES_CLASSIC = register("yellow_leaves_classic", () -> new Block(PROP_1));
    public static final RegistryObject<Block> OLIVE_LEAVES_CLASSIC = register("olive_leaves_classic", () -> new Block(PROP_1));
    public static final RegistryObject<Block> LIGHT_GREEN_LEAVES_CLASSIC = register("light_green_leaves_classic", () -> new Block(PROP_1));
    public static final RegistryObject<Block> GREEN_LEAVES_CLASSIC = register("green_leaves_classic", () -> new Block(PROP_1));
    public static final RegistryObject<Block> DARK_GREEN_LEAVES_CLASSIC = register("dark_green_leaves_classic", () -> new Block(PROP_1));
    public static final RegistryObject<Block> BLOOMING_WHITE_FLOWERS_LEAVES = register("blooming_white_flowers_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> LIGHT_JUNGLE_LEAVES_WITH_COCOA_PODS = register("light_jungle_leaves_with_cocoa_pods", () -> new Block(PROP_1));
    public static final RegistryObject<Block> LIGHT_JUNGLE_LEAVES_WITH_FRUIT = register("light_jungle_leaves_with_fruit", () -> new Block(PROP_1));
    public static final RegistryObject<Block> LIGHT_JUNGLE_LEAVES = register("light_jungle_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> TILLED_SOIL_RED = register("tilled_soil_red", () -> new Block(PROP_0));
    public static final RegistryObject<Block> TILLED_SOIL_RED_WET = register("tilled_soil_red_wet", () -> new Block(PROP_0));
    public static final RegistryObject<Block> DARK_JUNGLE_LEAVES_WITH_COCOA_PODS = register("dark_jungle_leaves_with_cocoa_pods", () -> new Block(PROP_1));
    public static final RegistryObject<Block> TILLED_SOIL_DIRT_WET = register("tilled_soil_dirt_wet", () -> new Block(PROP_0));
    public static final RegistryObject<Block> TILLED_SOIL_DIRT = register("tilled_soil_dirt", () -> new Block(PROP_0));
    public static final RegistryObject<Block> TILLED_SOIL_DARK = register("tilled_soil_dark", () -> new Block(PROP_0));
    public static final RegistryObject<Block> DARK_JUNGLE_LEAVES_WITH_FRUIT = register("dark_jungle_leaves_with_fruit", () -> new Block(PROP_1));
    public static final RegistryObject<Block> TILLED_SOIL_DARK_WET = register("tilled_soil_dark_wet", () -> new Block(PROP_0));
    public static final RegistryObject<Block> TILLED_SOIL_PLANT = register("tilled_soil_plant", () -> new Block(PROP_0));
    public static final RegistryObject<Block> TILLED_SOIL_FLOWER = register("tilled_soil_flower", () -> new Block(PROP_0));
    public static final RegistryObject<Block> DARK_JUNGLE_LEAVES = register("dark_jungle_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> TILLED_SOIL_WET = register("tilled_soil_wet", () -> new Block(PROP_0));
    public static final RegistryObject<Block> LIGHT_MANGROVE_LEAVES_WITH_COCOA_PODS = register("light_mangrove_leaves_with_cocoa_pods", () -> new Block(PROP_1));
    public static final RegistryObject<Block> LIGHT_MANGROVE_LEAVES_WITH_FRUIT = register("light_mangrove_leaves_with_fruit", () -> new Block(PROP_1));
    public static final RegistryObject<Block> TILLED_SOIL_DRY = register("tilled_soil_dry", () -> new Block(PROP_0));
    public static final RegistryObject<Block> LIGHT_MANGROVE_LEAVES = register("light_mangrove_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> DARK_MANGROVE_LEAVES_WITH_COCOA_PODS = register("dark_mangrove_leaves_with_cocoa_pods", () -> new Block(PROP_1));
    public static final RegistryObject<Block> DARK_MANGROVE_LEAVES_WITH_FRUIT = register("dark_mangrove_leaves_with_fruit", () -> new Block(PROP_1));
    public static final RegistryObject<Block> DARK_MANGROVE_LEAVES = register("dark_mangrove_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> SILVERMARCH_SWAMP_TREE_LEAVES = register("silvermarch_swamp_tree_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> SILVERY_SWAMP_TREE_LEAVES = register("silvery_swamp_tree_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> WHITE_CHERRY_BOSSOM_PETALS = register("white_cherry_bossom_petals", () -> new Block(PROP_0));
    public static final RegistryObject<Block> COARSE_DIRT_BRICK_RED = register("coarse_dirt_brick_red", () -> new Block(PROP_0));
    public static final RegistryObject<Block> PINK_CHERRY_BLOSSOM_PETALS = register("pink_cherry_blossom_petals", () -> new Block(PROP_0));
    public static final RegistryObject<Block> RED_AUTUMN_LEAVES = register("red_autumn_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> COARSE_DIRT_RED_TILE_LIGHT = register("coarse_dirt_red_tile_light", () -> new Block(PROP_0));
    public static final RegistryObject<Block> COARSE_DIRT_RED_TILE_DARK = register("coarse_dirt_red_tile_dark", () -> new Block(PROP_0));
    public static final RegistryObject<Block> ORANGE_AUTUMN_LEAVES = register("orange_autumn_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> YELLOW_AUTUMN_LEAVES = register("yellow_autumn_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> DYING_LEAVES = register("dying_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> VIBRANT_PINK_AUTUMN_LEAVES = register("vibrant_pink_autumn_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> VIBRANT_RED_AUTUMN_LEAVES = register("vibrant_red_autumn_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> VIBRANT_BROWN_AUTUMN_LEAVES = register("vibrant_brown_autumn_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> COARSE_DIRT_PEBBLE_5 = register("coarse_dirt_pebble_5", () -> new Block(PROP_0));
    public static final RegistryObject<Block> VIBRANT_DARK_ORANGE_AUTUMN_LEAVES = register("vibrant_dark_orange_autumn_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> COARSE_DIRT_PEBBLE_4 = register("coarse_dirt_pebble_4", () -> new Block(PROP_0));
    public static final RegistryObject<Block> COARSE_DIRT_PEBBLE_3 = register("coarse_dirt_pebble_3", () -> new Block(PROP_0));
    public static final RegistryObject<Block> VIBRANT_ORANGE_AUTUMN_LEAVES = register("vibrant_orange_autumn_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> COARSE_DIRT_PEBBLE_2 = register("coarse_dirt_pebble_2", () -> new Block(PROP_0));
    public static final RegistryObject<Block> VIBRANT_YELLOW_AUTUMN_LEAVES = register("vibrant_yellow_autumn_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> COARSE_DIRT_PATH_5 = register("coarse_dirt_path_5", () -> new Block(PROP_0));
    public static final RegistryObject<Block> COARSE_DIRT_PATH_4 = register("coarse_dirt_path_4", () -> new Block(PROP_0));
    public static final RegistryObject<Block> LIGHT_GREEN_BROAD_LEAVES = register("light_green_broad_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> COARSE_DIRT_PATH_3 = register("coarse_dirt_path_3", () -> new Block(PROP_0));
    public static final RegistryObject<Block> GREEN_BROAD_LEAVES = register("green_broad_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> COARSE_DIRT_PATH_2 = register("coarse_dirt_path_2", () -> new Block(PROP_0));
    public static final RegistryObject<Block> DARK_GREEN_BROAD_LEAVES = register("dark_green_broad_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> DEEP_GREEN_BROAD_LEAVES = register("deep_green_broad_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> DARK_MOSSY_BROAD_LEAVES = register("dark_mossy_broad_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> MOSSY_BROAD_LEAVES = register("mossy_broad_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> OLIVE_LEAVES = register("olive_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> COARSE_DIRT_STONED_LIGHT = register("coarse_dirt_stoned_light", () -> new Block(PROP_0));
    public static final RegistryObject<Block> GREEN_LEAVES = register("green_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> BRICK_STONE_COARSE_DIRT = register("brick_stone_coarse_dirt", () -> new Block(PROP_0));
    public static final RegistryObject<Block> DARK_GREEN_LEAVES = register("dark_green_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> COARSE_DIRT_DARK = register("coarse_dirt_dark", () -> new Block(PROP_0));
    public static final RegistryObject<Block> COARSE_DIRT_PEBBLE = register("coarse_dirt_pebble", () -> new Block(PROP_0));
    public static final RegistryObject<Block> COARSE_DIRT_PATH = register("coarse_dirt_path", () -> new Block(PROP_0));
    public static final RegistryObject<Block> COARSE_DIRT_BRICK_LIGHT = register("coarse_dirt_brick_light", () -> new Block(PROP_0));
    public static final RegistryObject<Block> STONE_COARSE_DIRT_LIGHT = register("stone_coarse_dirt_light", () -> new Block(PROP_0));
    public static final RegistryObject<Block> DECORATED_PINE_LEAVES = register("decorated_pine_leaves", () -> new Block(PROP_1));
    public static final RegistryObject<Block> COARSE_DIRT_BRICK = register("coarse_dirt_brick", () -> new Block(PROP_0));
    public static final RegistryObject<Block> LEAVES_POPCORN_GARLAND_NEEDLES = register("leaves_popcorn_garland_needles", () -> new Block(PROP_1));
    public static final RegistryObject<Block> COARSE_DIRT_DRY = register("coarse_dirt_dry", () -> new Block(PROP_0));
    public static final RegistryObject<Block> DRY_COARSE_DIRT = register("dry_coarse_dirt", () -> new Block(PROP_0));
    public static final RegistryObject<Block> LEAVES_PINE_NEEDLES = register("leaves_pine_needles", () -> new Block(PROP_1));
    public static final RegistryObject<Block> LEAVES_VARIANT_2 = register("leaves_variant_2", () -> new Block(PROP_1));
    public static final RegistryObject<FacingBlock> SNOWMAN_CACTUS = register("snowman_cactus", () -> new FacingBlock(PROP_0));
    public static final RegistryObject<FacingBlock> SANDWORM_CACTUS = register("sandworm_cactus", () -> new FacingBlock(PROP_0));
    public static final RegistryObject<FacingBlock> BROWN_CACTUS_NO_FLOWER = register("brown_cactus_no_flower", () -> new FacingBlock(PROP_0));
    public static final RegistryObject<FacingBlock> BROWN_CACTUS = register("brown_cactus", () -> new FacingBlock(PROP_0));
    public static final RegistryObject<Block> OKLAHOMA_DIRT = register("oklahoma_dirt", () -> new Block(PROP_0));
    public static final RegistryObject<FacingBlock> OLIVE_CACTUS_NO_FLOWER = register("olive_cactus_no_flower", () -> new FacingBlock(PROP_0));
    public static final RegistryObject<Block> FOREST_DIRT = register("forest_dirt", () -> new Block(PROP_0));
    public static final RegistryObject<FacingBlock> OLIVE_CACTUS = register("olive_cactus", () -> new FacingBlock(PROP_0));
    public static final RegistryObject<Block> DIRT_VARIANT_3 = register("dirt_variant_3", () -> new Block(PROP_0));
    public static final RegistryObject<Block> DIRT_VARIANT_2 = register("dirt_variant_2", () -> new Block(PROP_0));
    public static final RegistryObject<FacingBlock> GREEN_CACTUS_NO_FLOWER = register("green_cactus_no_flower", () -> new FacingBlock(PROP_0));
    public static final RegistryObject<FacingBlock> GREEN_CACTUS = register("green_cactus", () -> new FacingBlock(PROP_0));
    public static final RegistryObject<Block> DIRT_BASIC_BEIGE = register("dirt_basic_beige", () -> new Block(PROP_0));
    public static final RegistryObject<FacingBlock> ORANGE_CACTUS = register("orange_cactus", () -> new FacingBlock(PROP_0));
    public static final RegistryObject<Block> WASTELAND_DIRT_CRACKED_EARTH_CHAMOISEE = register("wasteland_dirt_cracked_earth_chamoisee", () -> new Block(PROP_0));
    public static final RegistryObject<FacingBlock> SMOOTH_MUSHROOM_STEM = register("smooth_mushroom_stem", () -> new FacingBlock(PROP_0));
    public static final RegistryObject<Block> PALM_MUSHROOM_STEM = register("palm_mushroom_stem", () -> new Block(PROP_0));
    public static final RegistryObject<FacingBlock> GIANT_MUSHROOM_STEM = register("giant_mushroom_stem", () -> new FacingBlock(PROP_0));
    public static final RegistryObject<Block> CREAM_SPOTTED_MUSHROOM_UNDERBELLIES = register("cream_spotted_mushroom_underbellies", () -> new Block(PROP_0));
    public static final RegistryObject<Block> CREAM_GILLED_MUSHROOM_UNDERBELLIES = register("cream_gilled_mushroom_underbellies", () -> new Block(PROP_0));
    public static final RegistryObject<Block> BEIGE_SPOTTED_MUSHROOM_UNDERBELLIES = register("beige_spotted_mushroom_underbellies", () -> new Block(PROP_0));
    public static final RegistryObject<Block> BEIGE_GILLED_MUSHROOM_UNDERBELLIES = register("beige_gilled_mushroom_underbellies", () -> new Block(PROP_0));
    public static final RegistryObject<Block> SPOTTED_MUSHROOM_UNDERBELLIES = register("spotted_mushroom_underbellies", () -> new Block(PROP_0));
    public static final RegistryObject<Block> GILLED_MUSHROOM_UNDERBELLIES = register("gilled_mushroom_underbellies", () -> new Block(PROP_0));
    public static final RegistryObject<Block> POISON_BLUE_MUSHROOMS = register("poison_blue_mushrooms", () -> new Block(PROP_0));
    public static final RegistryObject<Block> AUTUMN_MUSHROOMS = register("autumn_mushrooms", () -> new Block(PROP_0));
    public static final RegistryObject<Block> BEIGE_MUSHROOMS = register("beige_mushrooms", () -> new Block(PROP_0));
    public static final RegistryObject<Block> DEATHCAP_MUSHROOMS = register("deathcap_mushrooms", () -> new Block(PROP_0));
    public static final RegistryObject<Block> GOLDEN_MUSHROOMS = register("golden_mushrooms", () -> new Block(PROP_0));

    public static final RegistryObject<Block> BLOCK_CAMOUFLAGE = register("block_camouflage", BlockCamouflage::new);

    public static final RegistryObject<TileEntityType<SwappableTextureTileEntity>> TE__SWAPPABLE_TEXTURE = Registration.TILE_ENTITY_TYPES.register("swappable_texture", () -> TileEntityType.Builder.create(SwappableTextureTileEntity::new, BLOCK_CAMOUFLAGE.get()).build(null));

    public static void setCutoutRenderLayers(final FMLClientSetupEvent event)
    {
        RenderTypeLookup.setRenderLayer(BlocksList.LEAVES_VARIANT_2.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LEAVES_PINE_NEEDLES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LEAVES_POPCORN_GARLAND_NEEDLES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DECORATED_PINE_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_GREEN_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GREEN_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.OLIVE_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.MOSSY_BROAD_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_MOSSY_BROAD_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DEEP_GREEN_BROAD_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_GREEN_BROAD_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GREEN_BROAD_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LIGHT_GREEN_BROAD_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.VIBRANT_YELLOW_AUTUMN_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.VIBRANT_ORANGE_AUTUMN_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.VIBRANT_DARK_ORANGE_AUTUMN_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.VIBRANT_BROWN_AUTUMN_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.VIBRANT_RED_AUTUMN_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.VIBRANT_PINK_AUTUMN_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DYING_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.YELLOW_AUTUMN_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ORANGE_AUTUMN_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.RED_AUTUMN_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SILVERY_SWAMP_TREE_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SILVERMARCH_SWAMP_TREE_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_MANGROVE_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_MANGROVE_LEAVES_WITH_FRUIT.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_MANGROVE_LEAVES_WITH_COCOA_PODS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LIGHT_MANGROVE_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LIGHT_MANGROVE_LEAVES_WITH_FRUIT.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LIGHT_MANGROVE_LEAVES_WITH_COCOA_PODS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_JUNGLE_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_JUNGLE_LEAVES_WITH_FRUIT.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_JUNGLE_LEAVES_WITH_COCOA_PODS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LIGHT_JUNGLE_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LIGHT_JUNGLE_LEAVES_WITH_FRUIT.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LIGHT_JUNGLE_LEAVES_WITH_COCOA_PODS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BLOOMING_WHITE_FLOWERS_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_GREEN_LEAVES_CLASSIC.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GREEN_LEAVES_CLASSIC.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LIGHT_GREEN_LEAVES_CLASSIC.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.OLIVE_LEAVES_CLASSIC.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.YELLOW_LEAVES_CLASSIC.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.AUTUMN_YELLOW_LEAVES_CLASSIC.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ORANGE_LEAVES_CLASSIC.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_ORANGE_LEAVES_CLASSIC.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BROWN_LEAVES_CLASSIC.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.RED_AUTUMN_LEAVES_CLASSIC.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.RED_LEAVES_CLASSIC.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.PINK_LEAVES_CLASSIC.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.PINK_PETAL_LEAVES_CLASSIC.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.WHITE_PETAL_LEAVES_CLASSIC.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SILVER_LEAVES_CLASSIC.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SILVERMARCHES_LEAVES_CLASSIC.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ALLIUM_FLOWER.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ALLIUM_FLOWER.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BONSAI_TREE.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BONSAI_TREE.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.CEDAR_BONSAI_TREE.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_CEDAR_BONSAI_TREE.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ROBUST_OAK_TREE.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ROBUST_OAK_TREE.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.PALM_TREE.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_PALM_TREE.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.JUNGLE_TREE.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_JUNGLE_TREE.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.RED_ROSES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_RED_ROSES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.CLASSIC_ROSE.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_CLASSIC_ROSE.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.CLUSTER_OF_ROSES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_CLUSTER_OF_ROSES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GROUND_COVER_ROSES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_GROUND_COVER_ROSES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.RED_POPPY_PATCHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_RED_POPPY_PATCHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.RED_LONESOME_POPPIES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_RED_LONESOME_POPPIES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.WINTER_POINSETTIAS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_WINTER_POINSETTIAS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BRILLIANT_RED_GINGER.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BRILLIANT_RED_GINGER.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BRILLIANT_GINGER_PATCHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BRILLIANT_GINGER_PATCHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.FIERY_TULIPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_FIERY_TULIPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.VIBRANT_MARIGOLDS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_VIBRANT_MARIGOLDS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ORANGE_WILD_POPPIES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ORANGE_WILD_POPPIES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.CLUSTER_OF_ECHINACEA.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_CLUSTER_OF_ECHINACEA.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ECHINACEA_FIELD_FLOWERS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ECHINACEA_FIELD_FLOWERS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GROUND_COVER_ECHINACEA.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_GROUND_COVER_ECHINACEA.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DEEP_YELLOW_BELLFLOWERS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_DEEP_YELLOW_BELLFLOWERS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.YELLOW_NASTURTIUMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_YELLOW_NASTURTIUMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SINGLE_NASTURTIUM.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SINGLE_NASTURTIUM.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.CLUSTER_OF_NASTURTIUMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_CLUSTER_OF_NASTURTIUMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GROUND_COVER_NASTURTIUMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_GROUND_COVER_NASTURTIUMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARKLEAF_WILD_GOLDEN_ROSES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_DARKLEAF_WILD_GOLDEN_ROSES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.WILD_GOLDEN_ROSES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_WILD_GOLDEN_ROSES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.CREAMYWHITE_PEONIES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_CREAMYWHITE_PEONIES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.FANCIFUL_NETHER_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_FANCIFUL_NETHER_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LARGE_NETHER_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_LARGE_NETHER_LEAVES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.CREAMY_OXEYE_DAISIES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_CREAMY_OXEYE_DAISIES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.WHITE_ROSES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_WHITE_ROSES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.WHITE_ANENOME.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_WHITE_ANENOME.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GROUND_COVER_ANENOMES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_GROUND_COVER_ANENOMES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.WILD_PARSLEY_BLOOMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_WILD_PARSLEY_BLOOMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BABYS_BREATH.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BABYS_BREATH.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.PALE_HOUSTONIAS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_PALE_HOUSTONIAS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.CLUSTERED_MORNING_GLORIES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_CLUSTERED_MORNING_GLORIES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.MORNING_FIELD_GLORIES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_MORNING_FIELD_GLORIES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GROUND_COVER_MORNING_GLORIES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_GROUND_COVER_MORNING_GLORIES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BLUE_CHRYSANTHEMUMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BLUE_CHRYSANTHEMUMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BLUE_FLAX.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BLUE_FLAX.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BLUE_ORCHIDS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BLUE_ORCHIDS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BLUE_HYDRANGEAS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BLUE_HYDRANGEAS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.WILDFLOWERS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_WILDFLOWERS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.WILDFLOWER_SHRUBBERIES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_WILDFLOWER_SHRUBBERIES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SMALL_CLUSTERED_WILDFLOWERS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SMALL_CLUSTERED_WILDFLOWERS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GROUND_COVER_WILDFLOWERS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_GROUND_COVER_WILDFLOWERS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.PINK_HIBISCUS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_PINK_HIBISCUS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.PINK_DASIES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_PINK_DASIES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LIGHT_PURPLE_PAEONIAS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_LIGHT_PURPLE_PAEONIAS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.WILD_PAEONIAS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_WILD_PAEONIAS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SPROUTING_SYRINGA.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SPROUTING_SYRINGA.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ALLIUMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ALLIUMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.PURPLE_VIOLETS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_PURPLE_VIOLETS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.PURPLE_FIELD_VIOLETS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_PURPLE_FIELD_VIOLETS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GROUND_COVER_VIOLETS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_GROUND_COVER_VIOLETS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BLUE_PINE_SHRUB.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BLUE_PINE_SHRUB.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GREEN_PINE_SHRUB.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_GREEN_PINE_SHRUB.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SHORT_WOODY_SHRUB.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SHORT_WOODY_SHRUB.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GREEN_SHRUBS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_GREEN_SHRUBS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_GREEN_SHRUBS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_DARK_GREEN_SHRUBS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DYING_SHRUBS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_DYING_SHRUBS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.AUTUMN_SHRUBS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_AUTUMN_SHRUBS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_AUTUMN_SHRUBS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_DARK_AUTUMN_SHRUBS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DEATHCAP_SHROOM.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_DEATHCAP_SHROOM.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DEATHCAP_SHROOM_CLUSTERS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_DEATHCAP_SHROOM_CLUSTERS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.TALL_DEATHCAP_SHROOMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_TALL_DEATHCAP_SHROOMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.AUTUMN_SHROOMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_AUTUMN_SHROOMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.TALL_AUTUMN_SHROOMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_TALL_AUTUMN_SHROOMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.CATTAILS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_CATTAILS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.CATTAIL_PATCHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_CATTAIL_PATCHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SWAMPY_ROOTS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SWAMPY_ROOTS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LEAFY_SPROUTS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_LEAFY_SPROUTS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BAOMBOO_SHOOTS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BAOMBOO_SHOOTS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GRASS_CACTI.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_GRASS_CACTI.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BRANCHING_GRASS_CACTI.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BRANCHING_GRASS_CACTI.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.FAT_CACTUS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_FAT_CACTUS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.OLIVE_CACTI.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_OLIVE_CACTI.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BRANCHING_OLIVE_CACTI.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BRANCHING_OLIVE_CACTI.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BROWN_CACTI.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BROWN_CACTI.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BRANCHING_BROWN_CACTI.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BRANCHING_BROWN_CACTI.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.FAT_BROWN_CACTUS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_FAT_BROWN_CACTUS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DELICIOUS_CARROTS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_DELICIOUS_CARROTS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.HEARTY_PURPLE_TURNIPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_HEARTY_PURPLE_TURNIPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.HEALTHY_WHITE_TURNIPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_HEALTHY_WHITE_TURNIPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GREEN_TUFT.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_GREEN_TUFT.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DEAD_TUFT.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_DEAD_TUFT.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.AUTUMN_TUFT.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_AUTUMN_TUFT.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.YELLOWBLUE_HYBRID.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_YELLOWBLUE_HYBRID.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.YELLOWRED_HYBRID.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_YELLOWRED_HYBRID.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BLUERED_HYBRID.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BLUERED_HYBRID.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SMALL_MULTICOLOUR_HYBRID.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SMALL_MULTICOLOUR_HYBRID.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.MEDIUM_MULTICOLOUR_HYBRID.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_MEDIUM_MULTICOLOUR_HYBRID.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LARGE_MULTICOLOUR_HYBRID.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_LARGE_MULTICOLOUR_HYBRID.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GRAND_MULTICOLOUR_HYBRID.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_GRAND_MULTICOLOUR_HYBRID.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.YELLOW_TULIPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_YELLOW_TULIPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.YELLOW_TULIP_PATCHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_YELLOW_TULIP_PATCHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ORANGE_TULIPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ORANGE_TULIPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ORANGE_TULIP_PATCHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ORANGE_TULIP_PATCHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.RED_TULIPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_RED_TULIPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.RED_TULIP_PATCHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_RED_TULIP_PATCHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.PURPLE_TULIPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_PURPLE_TULIPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.PURPLE_TULIP_PATCHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_PURPLE_TULIP_PATCHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.PINK_TULIPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_PINK_TULIPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.PINK_TULIP_PATCHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_PINK_TULIP_PATCHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.WHITE_TULIPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_WHITE_TULIPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.WHITE_TULIP_PATCHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_WHITE_TULIP_PATCHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SCORCHING_FIRE.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SCORCHING_FIRE.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BRILLIANT_STAR.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BRILLIANT_STAR.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.MONONOKE_SPIRITS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_MONONOKE_SPIRITS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GREEN_CREEPER_STATUES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_GREEN_CREEPER_STATUES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GREEN_CLASSIC_CREEPER_STATUES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_GREEN_CLASSIC_CREEPER_STATUES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GREEN_DEMI_CREEPER_STATUES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_GREEN_DEMI_CREEPER_STATUES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_CREEPER_STATUES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_DARK_CREEPER_STATUES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_CLASSIC_CREEPER_STATUES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_DARK_CLASSIC_CREEPER_STATUES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_DEMI_CREEPER_STATUES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_DARK_DEMI_CREEPER_STATUES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LIGHT_CREEPER_STATUES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_LIGHT_CREEPER_STATUES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LIGHT_CLASSIC_CREEPER_STATUES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_LIGHT_CLASSIC_CREEPER_STATUES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LIGHT_DEMI_CREEPER_STATUES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_LIGHT_DEMI_CREEPER_STATUES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.MARUXS_CAT_FLOWER.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_MARUXS_CAT_FLOWER.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.TALL_ROSES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LEAFY_TALL_ROSES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GOLDEN_TALL_ROSES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.TALL_PAEONIAS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.TALL_LAVENDER.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.PURPLE_TALL_FLAX.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BLUE_TALL_FLAX.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BLUE_PINE_BUSHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GREEN_PINE_BUSHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SQUAT_SHRUBS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.MARUXS_CAT_BUSHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_GREEN_BUSHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GREEN_BUSHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DEAD_BUSHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.AUTUMN_BUSHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.RED_BUSHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_GREEN_JUNGLE_SHRUBS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GREEN_JUNGLE_SHRUBS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.WHITE_FLOWERED_JUNGLE_SHRUBS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.RED_FLOWER_JUNGLE_SHRUBS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.RED_JUNGLE_SHRUBS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.TROPICAL_FRUITS_BUSHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.PINEAPPLE_BUSHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.PINEAPPLE_BUSH.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.THIN_TOPIARY_BUSHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LARGE_TOPIARY_BUSHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SHORT_TOPIARY_BUSHES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.TALL_CATTAILS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.RED_GRAPES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GREEN_GRAPES.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BAMBOO_THICKETS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.CORNSTALKS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.TALL_BROWN_CACTI.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.TALL_GREEN_CACTI.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.TALL_OLIVE_CACTI.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LARGE_BUTTOM_MUSHROOMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LARGE_TOADSTOOLS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ROAMIN_MUSHROOM.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.TALL_DEATHCAPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GOLD_SUNFLOWERS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.WHITE_SUNFLOWERS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.RED_SUNFLOWERS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.MIXED_SUNFLOWERS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SMALL_RED_MUSHROOM.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SMALL_RED_MUSHROOM.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SMALL__RED_TOADSTOOLS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SMALL__RED_TOADSTOOLS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.RED_TOADSTOOLS_MINI_CAPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_RED_TOADSTOOLS_MINI_CAPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.TALL_TOADSTOOLS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_TALL_TOADSTOOLS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SMALL_MIXED_TOADSTOOLS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SMALL_MIXED_TOADSTOOLS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SMALL_MIXED_TOADSTOOLS_AND_BEIGE_CAPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SMALL_MIXED_TOADSTOOLS_AND_BEIGE_CAPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SMALL_RED_BUTTON_MUSHROOM.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SMALL_RED_BUTTON_MUSHROOM.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SMALL_GOLDEN_TOADSTOOL.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SMALL_GOLDEN_TOADSTOOL.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SMALL_GOLDEN_BUTTON_MUSHROOM.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SMALL_GOLDEN_BUTTON_MUSHROOM.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SMALL_DEATHCAPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SMALL_DEATHCAPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SMALL_DEATHCAP_CLUSTERS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SMALL_DEATHCAP_CLUSTERS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SMALL_BEIGE_BUTTON_MUSHROOM.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SMALL_BEIGE_BUTTON_MUSHROOM.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.TOADSTOOLSTYLE_BEIGE_CAPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_TOADSTOOLSTYLE_BEIGE_CAPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ALL_BEIGE_CAPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ALL_BEIGE_CAPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.MIXED_BEIGE_CAPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_MIXED_BEIGE_CAPS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.MIXED_BEIGE_CAPS_AND_TOADSTOOLS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_MIXED_BEIGE_CAPS_AND_TOADSTOOLS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BUTTON_MUSHROOM_CLUSTER.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BUTTON_MUSHROOM_CLUSTER.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SMALL_AUTUMN_MUSHROOM.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SMALL_AUTUMN_MUSHROOM.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.TALL_AUTUMN_MUSHROOMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_TALL_AUTUMN_MUSHROOMS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POISONOUS_MUSHROOM.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_POISONOUS_MUSHROOM.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SLIME_EGGS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SLIME_EGGS.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.JUNGLE_FRUIT_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_JUNGLE_FRUIT_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.JUNGLE_POD_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_JUNGLE_POD_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.LEAFY_SHRUB_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_LEAFY_SHRUB_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.WOODY_SHRUB_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_WOODY_SHRUB_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.TRADITIONAL_DARK_GREEN_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_TRADITIONAL_DARK_GREEN_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.TRADITIONAL_GREEN_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_TRADITIONAL_GREEN_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.TRADITIONAL_OLIVE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_TRADITIONAL_OLIVE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.YELLOW_TWIG.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_YELLOW_TWIG.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.RED_TWIG.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_RED_TWIG.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.PINK_TWIG.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_PINK_TWIG.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ORANGE_TWIG.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ORANGE_TWIG.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_ORANGE_TWIG.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_DARK_ORANGE_TWIG.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BROWN_TWIG.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BROWN_TWIG.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.AUTUMN_TWIG.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_AUTUMN_TWIG.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DEAD_TWIG.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_DEAD_TWIG.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.WILDLEAFED_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_WILDLEAFED_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.PINE_TREE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_PINE_TREE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.FIR_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_FIR_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.REDWOOD_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_REDWOOD_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.TALL_REDWOOD_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_TALL_REDWOOD_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_PINE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_DARK_PINE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.SPRUCE_TREE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_SPRUCE_TREE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.CEDAR_TREE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_CEDAR_TREE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BROAD_BIRCH_TREE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BROAD_BIRCH_TREE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_BROAD_BIRCH_TREE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_DARK_BROAD_BIRCH_TREE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.BIRCH_TREE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_BIRCH_TREE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_BIRCH_TREE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_DARK_BIRCH_TREE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.AUTUMN_BIRCH_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_AUTUMN_BIRCH_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.DARK_AUTUMN_BIRCH_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_DARK_AUTUMN_BIRCH_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ROBUST_AUTUMN_BROWN_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ROBUST_AUTUMN_BROWN_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ROBUST_DARK_AUTUMN_ORANGE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ROBUST_DARK_AUTUMN_ORANGE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ROBUST_AUTUMN_ORANGE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ROBUST_AUTUMN_ORANGE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ROBUST_AUTUMN_PINK_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ROBUST_AUTUMN_PINK_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ROBUST_AUTUMN_RED_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ROBUST_AUTUMN_RED_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ROBUST_AUTUMN_YELLOW_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ROBUST_AUTUMN_YELLOW_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ROBUST_DEAD_LEAF_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ROBUST_DEAD_LEAF_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ROBUST_ORANGE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ROBUST_ORANGE_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ROBUST_PINK_PETAL_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ROBUST_PINK_PETAL_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ROBUST_RED_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ROBUST_RED_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ROBUST_SILVERLEAF_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ROBUST_SILVERLEAF_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ROBUST_SILVERMARCHES_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ROBUST_SILVERMARCHES_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ROBUST_WHITE_PETAL_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ROBUST_WHITE_PETAL_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.ROBUST_YELLOW_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_ROBUST_YELLOW_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.GREEN_ACACIA_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_GREEN_ACACIA_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.YELLOW_ACACIA_SAPLING.get(), RenderType.getCutout());
        RenderTypeLookup.setRenderLayer(BlocksList.POTTED_YELLOW_ACACIA_SAPLING.get(), RenderType.getCutout());
    }



    private static <T extends Block> RegistryObject<T> registerNoItem(String name, Supplier<T> block) {
        return Registration.BLOCKS.register(name, block);
    }

    private static <T extends Block> RegistryObject<T> register(String name, Supplier<T> block) {
        RegistryObject<T> item = registerNoItem(name, block);
        Registration.ITEMS.register(name, () -> new BlockItem(item.get(), new Item.Properties().group(BlocksMod.itemGroup)));
        return item;
    }
}